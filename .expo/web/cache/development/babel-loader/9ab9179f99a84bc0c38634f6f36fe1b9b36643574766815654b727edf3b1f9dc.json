{"ast":null,"code":"import * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer, createBrowserApp } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from \"./Screens/HomeScreen\";\nimport DisplayScreen from \"./Screens/DisplayScreen\";\nimport FilterScreen from \"./Screens/FilterScreen\";\nimport MovieDetaiedScreen from \"./Screens/MovieDetailedScreen\";\nimport Constants from 'expo-constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar AppNavigator = function AppNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"HomeScreen\",\n    screenOptions: {\n      headerTitleAlign: \"center\",\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        color: 'black'\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"HomeScreen\",\n      component: HomeScreen,\n      options: {\n        headerShown: true,\n        headerStyle: {\n          backgroundColor: '#282f39'\n        },\n        headerTitleStyle: {\n          color: 'white'\n        },\n        headerTintColor: 'white'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"FilterScreen\",\n      component: FilterScreen,\n      options: {\n        headerShown: true,\n        headerStyle: {\n          backgroundColor: '#282f39'\n        },\n        headerTitleStyle: {\n          color: 'white'\n        },\n        headerTintColor: 'white'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"DisplayScreen\",\n      component: DisplayScreen,\n      options: {\n        headerShown: true,\n        headerStyle: {\n          backgroundColor: '#282f39'\n        },\n        headerTitleStyle: {\n          color: 'white'\n        },\n        headerTintColor: 'white'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"MovieScreen\",\n      component: MovieDetaiedScreen,\n      options: {\n        headerShown: true,\n        headerStyle: {\n          backgroundColor: '#282f39'\n        },\n        headerTitleStyle: {\n          color: 'white'\n        },\n        headerTintColor: 'white'\n      }\n    })]\n  });\n};\nvar BrowserApp = createBrowserApp(AppNavigator);\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(BrowserApp, {})\n  });\n}","map":{"version":3,"names":["React","Text","View","StyleSheet","NavigationContainer","createBrowserApp","createStackNavigator","HomeScreen","DisplayScreen","FilterScreen","MovieDetaiedScreen","Constants","jsx","_jsx","jsxs","_jsxs","Stack","AppNavigator","Navigator","initialRouteName","screenOptions","headerTitleAlign","headerTitleStyle","fontWeight","color","children","Screen","name","component","options","headerShown","headerStyle","backgroundColor","headerTintColor","BrowserApp","App"],"sources":["/Users/ahadanwar/Desktop/tmdb/App.js"],"sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { NavigationContainer, createBrowserApp } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from './Screens/HomeScreen';\nimport DisplayScreen from './Screens/DisplayScreen';\nimport FilterScreen from './Screens/FilterScreen';\nimport MovieDetaiedScreen from './Screens/MovieDetailedScreen';\n\nimport Constants from 'expo-constants';\n\nconst Stack = createStackNavigator();\nconst AppNavigator = () => (\n  <Stack.Navigator\n    initialRouteName=\"HomeScreen\"\n    screenOptions={{\n      headerTitleAlign: \"center\",\n      headerTitleStyle :{fontWeight: 'bold', color:'black'},\n    }}\n  >\n    <Stack.Screen\n      name=\"HomeScreen\"\n      component={HomeScreen}\n      options={{\n        headerShown: true,\n        headerStyle: {\n          backgroundColor: '#282f39',\n        },\n        headerTitleStyle: {\n          color: 'white',\n        },\n        headerTintColor: 'white',\n      }}\n    />\n    <Stack.Screen\n      name=\"FilterScreen\"\n      component={FilterScreen}\n      options={{\n        headerShown: true,\n        headerStyle: {\n          backgroundColor: '#282f39',\n        },\n        headerTitleStyle: {\n          color: 'white',\n        },\n        headerTintColor: 'white',\n      }}\n    />\n    <Stack.Screen\n      name=\"DisplayScreen\"\n      component={DisplayScreen}\n      options={{\n        headerShown: true,\n        headerStyle: {\n          backgroundColor: '#282f39',\n        },\n        headerTitleStyle: {\n          color: 'white',\n        },\n        headerTintColor: 'white',\n      }}\n    />\n    <Stack.Screen\n      name=\"MovieScreen\"\n      component={MovieDetaiedScreen}\n      options={{\n        headerShown: true,\n        headerStyle: {\n          backgroundColor: '#282f39',\n        },\n        headerTitleStyle: {\n          color: 'white',\n        },\n        headerTintColor: 'white',\n      }}\n    />\n  </Stack.Navigator>\n);\n\nconst BrowserApp = createBrowserApp(AppNavigator);\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <BrowserApp />\n    </NavigationContainer>\n  );\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE/B,SAASC,mBAAmB,EAAEC,gBAAgB,QAAQ,0BAA0B;AAChF,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,OAAOC,YAAY;AACnB,OAAOC,kBAAkB;AAEzB,OAAOC,SAAS,MAAM,gBAAgB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvC,IAAMC,KAAK,GAAGV,oBAAoB,EAAE;AACpC,IAAMW,YAAY,GAAG,SAAfA,YAAYA,CAAA;EAAA,OAChBF,KAAA,CAACC,KAAK,CAACE,SAAS;IACdC,gBAAgB,EAAC,YAAY;IAC7BC,aAAa,EAAE;MACbC,gBAAgB,EAAE,QAAQ;MAC1BC,gBAAgB,EAAE;QAACC,UAAU,EAAE,MAAM;QAAEC,KAAK,EAAC;MAAO;IACtD,CAAE;IAAAC,QAAA,GAEFZ,IAAA,CAACG,KAAK,CAACU,MAAM;MACXC,IAAI,EAAC,YAAY;MACjBC,SAAS,EAAErB,UAAW;MACtBsB,OAAO,EAAE;QACPC,WAAW,EAAE,IAAI;QACjBC,WAAW,EAAE;UACXC,eAAe,EAAE;QACnB,CAAC;QACDV,gBAAgB,EAAE;UAChBE,KAAK,EAAE;QACT,CAAC;QACDS,eAAe,EAAE;MACnB;IAAE,EACF,EACFpB,IAAA,CAACG,KAAK,CAACU,MAAM;MACXC,IAAI,EAAC,cAAc;MACnBC,SAAS,EAAEnB,YAAa;MACxBoB,OAAO,EAAE;QACPC,WAAW,EAAE,IAAI;QACjBC,WAAW,EAAE;UACXC,eAAe,EAAE;QACnB,CAAC;QACDV,gBAAgB,EAAE;UAChBE,KAAK,EAAE;QACT,CAAC;QACDS,eAAe,EAAE;MACnB;IAAE,EACF,EACFpB,IAAA,CAACG,KAAK,CAACU,MAAM;MACXC,IAAI,EAAC,eAAe;MACpBC,SAAS,EAAEpB,aAAc;MACzBqB,OAAO,EAAE;QACPC,WAAW,EAAE,IAAI;QACjBC,WAAW,EAAE;UACXC,eAAe,EAAE;QACnB,CAAC;QACDV,gBAAgB,EAAE;UAChBE,KAAK,EAAE;QACT,CAAC;QACDS,eAAe,EAAE;MACnB;IAAE,EACF,EACFpB,IAAA,CAACG,KAAK,CAACU,MAAM;MACXC,IAAI,EAAC,aAAa;MAClBC,SAAS,EAAElB,kBAAmB;MAC9BmB,OAAO,EAAE;QACPC,WAAW,EAAE,IAAI;QACjBC,WAAW,EAAE;UACXC,eAAe,EAAE;QACnB,CAAC;QACDV,gBAAgB,EAAE;UAChBE,KAAK,EAAE;QACT,CAAC;QACDS,eAAe,EAAE;MACnB;IAAE,EACF;EAAA,EACc;AAAA,CACnB;AAED,IAAMC,UAAU,GAAG7B,gBAAgB,CAACY,YAAY,CAAC;AAEjD,eAAe,SAASkB,GAAGA,CAAA,EAAG;EAC5B,OACEtB,IAAA,CAACT,mBAAmB;IAAAqB,QAAA,EAClBZ,IAAA,CAACqB,UAAU;EAAG,EACM;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}