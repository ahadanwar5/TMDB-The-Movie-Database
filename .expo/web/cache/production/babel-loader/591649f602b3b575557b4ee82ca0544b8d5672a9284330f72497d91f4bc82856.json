{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"accessibilityLabel\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import AppbarAction from\"./AppbarAction\";import AppbarBackIcon from\"./AppbarBackIcon\";var AppbarBackAction=function AppbarBackAction(_ref){var _ref$accessibilityLab=_ref.accessibilityLabel,accessibilityLabel=_ref$accessibilityLab===void 0?'Back':_ref$accessibilityLab,rest=_objectWithoutProperties(_ref,_excluded);return React.createElement(AppbarAction,_extends({accessibilityLabel:accessibilityLabel},rest,{icon:AppbarBackIcon}));};AppbarBackAction.displayName='Appbar.BackAction';export default AppbarBackAction;export{AppbarBackAction};","map":{"version":3,"names":["React","AppbarAction","AppbarBackIcon","AppbarBackAction","_ref","_ref$accessibilityLab","accessibilityLabel","rest","_objectWithoutProperties","_excluded","createElement","_extends","icon","displayName"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/react-native-paper/lib/module/components/Appbar/AppbarBackAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport type { $Omit } from './../../types';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackIcon from './AppbarBackIcon';\nimport type { StyleProp, ViewStyle } from 'react-native';\n\ntype Props = $Omit<\n  React.ComponentPropsWithoutRef<typeof AppbarAction>,\n  'icon'\n> & {\n  /**\n   *  Custom color for back icon.\n   */\n  color?: string;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component used to display a back button in the appbar.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-backaction-android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n * </div>\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-backaction-ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={() => {}} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarBackAction = ({ accessibilityLabel = 'Back', ...rest }: Props) => (\n  <AppbarAction\n    accessibilityLabel={accessibilityLabel}\n    {...rest}\n    icon={AppbarBackIcon}\n  />\n);\n\nAppbarBackAction.displayName = 'Appbar.BackAction';\n\nexport default AppbarBackAction;\n\n// @component-docs ignore-next-line\nexport { AppbarBackAction };\n"],"mappings":"iZAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,MAAO,CAAAC,YAAP,sBACA,MAAO,CAAAC,cAAP,wBA8DA,GAAM,CAAAC,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAAC,IAAA,MAAAC,qBAAA,CAAAD,IAAA,CAAME,kBAAkB,CAAlBA,kBAAkB,CAAAD,qBAAA,UAAG,MAAvB,CAAAA,qBAAA,CAAkCE,IAAA,CAAAC,wBAAA,CAAAJ,IAAA,CAAAK,SAAA,QAC1D,CAAAT,KAAA,CAAAU,aAAA,CAACT,YAAD,CAAAU,QAAA,EACEL,kBAAkB,CAAEA,kBADtB,EAEMC,IAFN,EAGEK,IAAI,CAAEV,cAHR,GADF,GAQAC,gBAAgB,CAACU,WAAjB,CAA+B,mBAA/B,CAEA,cAAe,CAAAV,gBAAf,CAGA,OAASA,gBAAT"},"metadata":{},"sourceType":"module","externalDependencies":[]}