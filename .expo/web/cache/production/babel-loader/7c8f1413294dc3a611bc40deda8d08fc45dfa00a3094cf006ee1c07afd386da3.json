{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"status\",\"theme\",\"disabled\",\"onPress\",\"testID\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import MaterialCommunityIcon from\"../MaterialCommunityIcon\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import{withTheme}from\"../../core/theming\";var ANIMATION_DURATION=100;var CheckboxAndroid=function CheckboxAndroid(_ref){var status=_ref.status,theme=_ref.theme,disabled=_ref.disabled,onPress=_ref.onPress,testID=_ref.testID,rest=_objectWithoutProperties(_ref,_excluded);var _React$useRef=React.useRef(new Animated.Value(1)),scaleAnim=_React$useRef.current;var isFirstRendering=React.useRef(true);var scale=theme.animation.scale;React.useEffect(function(){if(isFirstRendering.current){isFirstRendering.current=false;return;}var checked=status==='checked';Animated.sequence([Animated.timing(scaleAnim,{toValue:0.85,duration:checked?ANIMATION_DURATION*scale:0,useNativeDriver:false}),Animated.timing(scaleAnim,{toValue:1,duration:checked?ANIMATION_DURATION*scale:ANIMATION_DURATION*scale*1.75,useNativeDriver:false})]).start();},[status,scaleAnim,scale]);var checked=status==='checked';var indeterminate=status==='indeterminate';var checkedColor=rest.color||theme.colors.accent;var uncheckedColor=rest.uncheckedColor||color(theme.colors.text).alpha(theme.dark?0.7:0.54).rgb().string();var rippleColor,checkboxColor;if(disabled){rippleColor=color(theme.colors.text).alpha(0.16).rgb().string();checkboxColor=theme.colors.disabled;}else{rippleColor=color(checkedColor).fade(0.32).rgb().string();checkboxColor=checked?checkedColor:uncheckedColor;}var borderWidth=scaleAnim.interpolate({inputRange:[0.8,1],outputRange:[7,0]});var icon=indeterminate?'minus-box':checked?'checkbox-marked':'checkbox-blank-outline';return React.createElement(TouchableRipple,_extends({},rest,{borderless:true,rippleColor:rippleColor,onPress:onPress,disabled:disabled,accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"checkbox\",accessibilityState:{disabled:disabled,checked:checked},accessibilityLiveRegion:\"polite\",style:styles.container,testID:testID}),React.createElement(Animated.View,{style:{transform:[{scale:scaleAnim}]}},React.createElement(MaterialCommunityIcon,{allowFontScaling:false,name:icon,size:24,color:checkboxColor,direction:\"ltr\"}),React.createElement(View,{style:[StyleSheet.absoluteFill,styles.fillContainer]},React.createElement(Animated.View,{style:[styles.fill,{borderColor:checkboxColor},{borderWidth:borderWidth}]}))));};CheckboxAndroid.displayName='Checkbox.Android';var styles=StyleSheet.create({container:{borderRadius:18,width:36,height:36,padding:6},fillContainer:{alignItems:'center',justifyContent:'center'},fill:{height:14,width:14}});export default withTheme(CheckboxAndroid);var CheckboxAndroidWithTheme=withTheme(CheckboxAndroid);export{CheckboxAndroidWithTheme as CheckboxAndroid};","map":{"version":3,"names":["React","Animated","View","StyleSheet","color","MaterialCommunityIcon","TouchableRipple","withTheme","ANIMATION_DURATION","CheckboxAndroid","_ref","status","theme","disabled","onPress","testID","rest","_objectWithoutProperties","_excluded","_React$useRef","useRef","Value","scaleAnim","current","isFirstRendering","scale","animation","useEffect","checked","sequence","timing","toValue","duration","useNativeDriver","start","indeterminate","checkedColor","colors","accent","uncheckedColor","text","alpha","dark","rgb","string","rippleColor","checkboxColor","fade","borderWidth","interpolate","inputRange","outputRange","icon","createElement","_extends","borderless","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","transform","allowFontScaling","name","size","direction","absoluteFill","fillContainer","fill","borderColor","displayName","create","borderRadius","width","height","padding","alignItems","justifyContent","CheckboxAndroidWithTheme"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/react-native-paper/lib/module/components/Checkbox/CheckboxAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 100;\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nconst CheckboxAndroid = ({\n  status,\n  theme,\n  disabled,\n  onPress,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: scaleAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    const checked = status === 'checked';\n\n    Animated.sequence([\n      Animated.timing(scaleAnim, {\n        toValue: 0.85,\n        duration: checked ? ANIMATION_DURATION * scale : 0,\n        useNativeDriver: false,\n      }),\n      Animated.timing(scaleAnim, {\n        toValue: 1,\n        duration: checked\n          ? ANIMATION_DURATION * scale\n          : ANIMATION_DURATION * scale * 1.75,\n        useNativeDriver: false,\n      }),\n    ]).start();\n  }, [status, scaleAnim, scale]);\n\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n  const checkedColor = rest.color || theme.colors.accent;\n  const uncheckedColor =\n    rest.uncheckedColor ||\n    color(theme.colors.text)\n      .alpha(theme.dark ? 0.7 : 0.54)\n      .rgb()\n      .string();\n\n  let rippleColor, checkboxColor;\n\n  if (disabled) {\n    rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n    checkboxColor = theme.colors.disabled;\n  } else {\n    rippleColor = color(checkedColor).fade(0.32).rgb().string();\n    checkboxColor = checked ? checkedColor : uncheckedColor;\n  }\n\n  const borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0],\n  });\n\n  const icon = indeterminate\n    ? 'minus-box'\n    : checked\n    ? 'checkbox-marked'\n    : 'checkbox-blank-outline';\n\n  return (\n    <TouchableRipple\n      {...rest}\n      borderless\n      rippleColor={rippleColor}\n      onPress={onPress}\n      disabled={disabled}\n      // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n      accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n      accessibilityComponentType=\"button\"\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{ disabled, checked }}\n      accessibilityLiveRegion=\"polite\"\n      style={styles.container}\n      testID={testID}\n    >\n      <Animated.View style={{ transform: [{ scale: scaleAnim }] }}>\n        <MaterialCommunityIcon\n          allowFontScaling={false}\n          name={icon}\n          size={24}\n          color={checkboxColor}\n          direction=\"ltr\"\n        />\n        <View style={[StyleSheet.absoluteFill, styles.fillContainer]}>\n          <Animated.View\n            style={[\n              styles.fill,\n              { borderColor: checkboxColor },\n              { borderWidth },\n            ]}\n          />\n        </View>\n      </Animated.View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxAndroid.displayName = 'Checkbox.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6,\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fill: {\n    height: 14,\n    width: 14,\n  },\n});\n\nexport default withTheme(CheckboxAndroid);\n\n// @component-docs ignore-next-line\nconst CheckboxAndroidWithTheme = withTheme(CheckboxAndroid);\n// @component-docs ignore-next-line\nexport { CheckboxAndroidWithTheme as CheckboxAndroid };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}