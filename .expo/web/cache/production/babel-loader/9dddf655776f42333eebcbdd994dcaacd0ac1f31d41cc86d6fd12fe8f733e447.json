{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"status\",\"label\",\"onPress\",\"labelStyle\",\"theme\",\"testID\",\"mode\",\"position\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Checkbox from\"./Checkbox\";import CheckboxAndroid from\"./CheckboxAndroid\";import CheckboxIOS from\"./CheckboxIOS\";import Text from\"../Typography/Text\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import{withTheme}from\"../../core/theming\";var CheckboxItem=function CheckboxItem(_ref){var style=_ref.style,status=_ref.status,label=_ref.label,onPress=_ref.onPress,labelStyle=_ref.labelStyle,theme=_ref.theme,testID=_ref.testID,mode=_ref.mode,_ref$position=_ref.position,position=_ref$position===void 0?'trailing':_ref$position,props=_objectWithoutProperties(_ref,_excluded);var checkboxProps=_objectSpread(_objectSpread({},props),{},{status:status,theme:theme});var isLeading=position==='leading';var checkbox;if(mode==='android'){checkbox=React.createElement(CheckboxAndroid,checkboxProps);}else if(mode==='ios'){checkbox=React.createElement(CheckboxIOS,checkboxProps);}else{checkbox=React.createElement(Checkbox,checkboxProps);}return React.createElement(TouchableRipple,{onPress:onPress,testID:testID},React.createElement(View,{style:[styles.container,style],pointerEvents:\"none\"},isLeading&&checkbox,React.createElement(Text,{style:[styles.label,{color:theme.colors.text,textAlign:isLeading?'right':'left'},labelStyle]},label),!isLeading&&checkbox));};CheckboxItem.displayName='Checkbox.Item';export default withTheme(CheckboxItem);var CheckboxItemWithTheme=withTheme(CheckboxItem);export{CheckboxItemWithTheme as CheckboxItem};var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',paddingVertical:8,paddingHorizontal:16},label:{fontSize:16,flexShrink:1,flexGrow:1}});","map":{"version":3,"names":["React","StyleSheet","View","Checkbox","CheckboxAndroid","CheckboxIOS","Text","TouchableRipple","withTheme","CheckboxItem","_ref","style","status","label","onPress","labelStyle","theme","testID","mode","_ref$position","position","props","_objectWithoutProperties","_excluded","checkboxProps","_objectSpread","isLeading","checkbox","createElement","styles","container","pointerEvents","color","colors","text","textAlign","displayName","CheckboxItemWithTheme","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","fontSize","flexShrink","flexGrow"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/react-native-paper/lib/module/components/Checkbox/CheckboxItem.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport Checkbox from './Checkbox';\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\n\ntype Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * Additional styles for container View.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * Checkbox control position. Default is `trailing`.\n   */\n  position?: 'leading' | 'trailing';\n  /**\n   * Whether `<Checkbox.Android />` or `<Checkbox.IOS />` should be used.\n   * Left undefined `<Checkbox />` will be used.\n   */\n  mode?: 'android' | 'ios';\n};\n\n/**\n * Checkbox.Item allows you to press the whole row (item) instead of only the Checkbox.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Checkbox.Item label=\"Item\" status=\"checked\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n *```\n */\n\nconst CheckboxItem = ({\n  style,\n  status,\n  label,\n  onPress,\n  labelStyle,\n  theme,\n  testID,\n  mode,\n  position = 'trailing',\n  ...props\n}: Props) => {\n  const checkboxProps = { ...props, status, theme };\n  const isLeading = position === 'leading';\n  let checkbox;\n\n  if (mode === 'android') {\n    checkbox = <CheckboxAndroid {...checkboxProps} />;\n  } else if (mode === 'ios') {\n    checkbox = <CheckboxIOS {...checkboxProps} />;\n  } else {\n    checkbox = <Checkbox {...checkboxProps} />;\n  }\n\n  return (\n    <TouchableRipple onPress={onPress} testID={testID}>\n      <View style={[styles.container, style]} pointerEvents=\"none\">\n        {isLeading && checkbox}\n        <Text\n          style={[\n            styles.label,\n            {\n              color: theme.colors.text,\n              textAlign: isLeading ? 'right' : 'left',\n            },\n            labelStyle,\n          ]}\n        >\n          {label}\n        </Text>\n        {!isLeading && checkbox}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxItem.displayName = 'Checkbox.Item';\n\nexport default withTheme(CheckboxItem);\n\n// @component-docs ignore-next-line\nconst CheckboxItemWithTheme = withTheme(CheckboxItem);\n// @component-docs ignore-next-line\nexport { CheckboxItemWithTheme as CheckboxItem };\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  label: {\n    fontSize: 16,\n    flexShrink: 1,\n    flexGrow: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}