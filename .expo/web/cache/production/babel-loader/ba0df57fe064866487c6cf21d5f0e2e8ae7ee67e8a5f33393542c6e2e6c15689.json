{"ast":null,"code":"import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{withTheme}from\"../../core/theming\";import{RadioButtonContext}from\"./RadioButtonGroup\";import{handlePress}from\"./utils\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import RadioButton from\"./RadioButton\";import Text from\"../Typography/Text\";import RadioButtonAndroid from\"./RadioButtonAndroid\";import RadioButtonIOS from\"./RadioButtonIOS\";var RadioButtonItem=function RadioButtonItem(_ref){var value=_ref.value,label=_ref.label,style=_ref.style,labelStyle=_ref.labelStyle,onPress=_ref.onPress,disabled=_ref.disabled,color=_ref.color,uncheckedColor=_ref.uncheckedColor,status=_ref.status,colors=_ref.theme.colors,accessibilityLabel=_ref.accessibilityLabel,testID=_ref.testID,mode=_ref.mode,_ref$position=_ref.position,position=_ref$position===void 0?'trailing':_ref$position;var radioButtonProps={value:value,disabled:disabled,status:status,color:color,uncheckedColor:uncheckedColor};var isLeading=position==='leading';var radioButton;if(mode==='android'){radioButton=React.createElement(RadioButtonAndroid,radioButtonProps);}else if(mode==='ios'){radioButton=React.createElement(RadioButtonIOS,radioButtonProps);}else{radioButton=React.createElement(RadioButton,radioButtonProps);}return React.createElement(RadioButtonContext.Consumer,null,function(context){return React.createElement(TouchableRipple,{onPress:disabled?undefined:function(){return handlePress({onPress:onPress,onValueChange:context===null||context===void 0?void 0:context.onValueChange,value:value});},accessibilityLabel:accessibilityLabel,testID:testID},React.createElement(View,{style:[styles.container,style],pointerEvents:\"none\"},isLeading&&radioButton,React.createElement(Text,{style:[styles.label,{color:colors.text,textAlign:isLeading?'right':'left'},labelStyle]},label),!isLeading&&radioButton));});};RadioButtonItem.displayName='RadioButton.Item';export default withTheme(RadioButtonItem);var RadioButtonItemWithTheme=withTheme(RadioButtonItem);export{RadioButtonItemWithTheme as RadioButtonItem};var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',paddingVertical:8,paddingHorizontal:16},label:{fontSize:16,flexShrink:1,flexGrow:1}});","map":{"version":3,"names":["React","View","StyleSheet","withTheme","RadioButtonContext","handlePress","TouchableRipple","RadioButton","Text","RadioButtonAndroid","RadioButtonIOS","RadioButtonItem","_ref","value","label","style","labelStyle","onPress","disabled","color","uncheckedColor","status","colors","theme","accessibilityLabel","testID","mode","_ref$position","position","radioButtonProps","isLeading","radioButton","createElement","Consumer","context","undefined","onValueChange","styles","container","pointerEvents","text","textAlign","displayName","RadioButtonItemWithTheme","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","fontSize","flexShrink","flexGrow"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/react-native-paper/lib/module/components/RadioButton/RadioButtonItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress } from './utils';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport RadioButton from './RadioButton';\nimport Text from '../Typography/Text';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport RadioButtonIOS from './RadioButtonIOS';\n\nexport type Props = {\n  /**\n   * Value of the radio button.\n   */\n  value: string;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Accessibility label for the touchable. This is read by the screen reader when the user taps the touchable.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Additional styles for container View.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * Whether `<RadioButton.Android />` or `<RadioButton.IOS />` should be used.\n   * Left undefined `<RadioButton />` will be used.\n   */\n  mode?: 'android' | 'ios';\n  /**\n   * Radio button control position. Default is `leading`.\n   */\n  position?: 'leading' | 'trailing';\n};\n\n/**\n * RadioButton.Item allows you to press the whole row (item) instead of only the RadioButton.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/radio-item.ios.png\" />\n *     <figcaption>Pressed</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('first');\n *\n *   return (\n *     <RadioButton.Group onValueChange={value => setValue(value)} value={value}>\n *       <RadioButton.Item label=\"First item\" value=\"first\" />\n *       <RadioButton.Item label=\"Second item\" value=\"second\" />\n *     </RadioButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nconst RadioButtonItem = ({\n  value,\n  label,\n  style,\n  labelStyle,\n  onPress,\n  disabled,\n  color,\n  uncheckedColor,\n  status,\n  theme: { colors },\n  accessibilityLabel,\n  testID,\n  mode,\n  position = 'trailing',\n}: Props) => {\n  const radioButtonProps = { value, disabled, status, color, uncheckedColor };\n  const isLeading = position === 'leading';\n  let radioButton: any;\n\n  if (mode === 'android') {\n    radioButton = <RadioButtonAndroid {...radioButtonProps} />;\n  } else if (mode === 'ios') {\n    radioButton = <RadioButtonIOS {...radioButtonProps} />;\n  } else {\n    radioButton = <RadioButton {...radioButtonProps} />;\n  }\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        return (\n          <TouchableRipple\n            onPress={\n              disabled\n                ? undefined\n                : () =>\n                    handlePress({\n                      onPress: onPress,\n                      onValueChange: context?.onValueChange,\n                      value,\n                    })\n            }\n            accessibilityLabel={accessibilityLabel}\n            testID={testID}\n          >\n            <View style={[styles.container, style]} pointerEvents=\"none\">\n              {isLeading && radioButton}\n              <Text\n                style={[\n                  styles.label,\n                  {\n                    color: colors.text,\n                    textAlign: isLeading ? 'right' : 'left',\n                  },\n                  labelStyle,\n                ]}\n              >\n                {label}\n              </Text>\n              {!isLeading && radioButton}\n            </View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonItem.displayName = 'RadioButton.Item';\n\nexport default withTheme(RadioButtonItem);\n\n// @component-docs ignore-next-line\nconst RadioButtonItemWithTheme = withTheme(RadioButtonItem);\n// @component-docs ignore-next-line\nexport { RadioButtonItemWithTheme as RadioButtonItem };\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  label: {\n    fontSize: 16,\n    flexShrink: 1,\n    flexGrow: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}