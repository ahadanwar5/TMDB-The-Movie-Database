{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{UnavailabilityError}from'expo-modules-core';import NativeEventEmitter from\"react-native-web/dist/exports/NativeEventEmitter\";import ExponentSpeech from\"./ExponentSpeech\";import{VoiceQuality}from\"./Speech.types\";var SpeechEventEmitter=ExponentSpeech&&new NativeEventEmitter(ExponentSpeech);export{VoiceQuality};var _CALLBACKS={};var _nextCallbackId=1;var _didSetListeners=false;function _unregisterListenersIfNeeded(){if(Object.keys(_CALLBACKS).length===0){removeSpeakingListener('Exponent.speakingStarted');removeSpeakingListener('Exponent.speakingDone');removeSpeakingListener('Exponent.speakingStopped');removeSpeakingListener('Exponent.speakingError');_didSetListeners=false;}}function _registerListenersIfNeeded(){if(_didSetListeners)return;_didSetListeners=true;setSpeakingListener('Exponent.speakingStarted',function(_ref){var id=_ref.id;var options=_CALLBACKS[id];if(options&&options.onStart){options.onStart();}});setSpeakingListener('Exponent.speakingDone',function(_ref2){var id=_ref2.id;var options=_CALLBACKS[id];if(options&&options.onDone){options.onDone();}delete _CALLBACKS[id];_unregisterListenersIfNeeded();});setSpeakingListener('Exponent.speakingStopped',function(_ref3){var id=_ref3.id;var options=_CALLBACKS[id];if(options&&options.onStopped){options.onStopped();}delete _CALLBACKS[id];_unregisterListenersIfNeeded();});setSpeakingListener('Exponent.speakingError',function(_ref4){var id=_ref4.id,error=_ref4.error;var options=_CALLBACKS[id];if(options&&options.onError){options.onError(new Error(error));}delete _CALLBACKS[id];_unregisterListenersIfNeeded();});}export function speak(text){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var id=_nextCallbackId++;_CALLBACKS[id]=options;_registerListenersIfNeeded();ExponentSpeech.speak(String(id),text,options);}export function getAvailableVoicesAsync(){return _regeneratorRuntime.async(function getAvailableVoicesAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(ExponentSpeech.getVoices){_context.next=2;break;}throw new UnavailabilityError('Speech','getVoices');case 2:return _context.abrupt(\"return\",ExponentSpeech.getVoices());case 3:case\"end\":return _context.stop();}}},null,null,null,Promise);}export function isSpeakingAsync(){return _regeneratorRuntime.async(function isSpeakingAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",ExponentSpeech.isSpeaking());case 1:case\"end\":return _context2.stop();}}},null,null,null,Promise);}export function stop(){return _regeneratorRuntime.async(function stop$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",ExponentSpeech.stop());case 1:case\"end\":return _context3.stop();}}},null,null,null,Promise);}export function pause(){return _regeneratorRuntime.async(function pause$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(ExponentSpeech.pause){_context4.next=2;break;}throw new UnavailabilityError('Speech','pause');case 2:return _context4.abrupt(\"return\",ExponentSpeech.pause());case 3:case\"end\":return _context4.stop();}}},null,null,null,Promise);}export function resume(){return _regeneratorRuntime.async(function resume$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(ExponentSpeech.resume){_context5.next=2;break;}throw new UnavailabilityError('Speech','resume');case 2:return _context5.abrupt(\"return\",ExponentSpeech.resume());case 3:case\"end\":return _context5.stop();}}},null,null,null,Promise);}function setSpeakingListener(eventName,callback){var listenerCount=SpeechEventEmitter.listenerCount?SpeechEventEmitter.listenerCount(eventName):SpeechEventEmitter.listeners(eventName).length;if(listenerCount>0){SpeechEventEmitter.removeAllListeners(eventName);}SpeechEventEmitter.addListener(eventName,callback);}function removeSpeakingListener(eventName){SpeechEventEmitter.removeAllListeners(eventName);}export var maxSpeechInputLength=ExponentSpeech.maxSpeechInputLength||Number.MAX_VALUE;","map":{"version":3,"names":["UnavailabilityError","NativeEventEmitter","ExponentSpeech","VoiceQuality","SpeechEventEmitter","_CALLBACKS","_nextCallbackId","_didSetListeners","_unregisterListenersIfNeeded","Object","keys","length","removeSpeakingListener","_registerListenersIfNeeded","setSpeakingListener","_ref","id","options","onStart","_ref2","onDone","_ref3","onStopped","_ref4","error","onError","Error","speak","text","arguments","undefined","String","getAvailableVoicesAsync","_regeneratorRuntime","async","getAvailableVoicesAsync$","_context","prev","next","getVoices","abrupt","stop","Promise","isSpeakingAsync","isSpeakingAsync$","_context2","isSpeaking","stop$","_context3","pause","pause$","_context4","resume","resume$","_context5","eventName","callback","listenerCount","listeners","removeAllListeners","addListener","maxSpeechInputLength","Number","MAX_VALUE"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/expo-speech/src/Speech/Speech.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\nimport { NativeEventEmitter } from 'react-native';\n\nimport ExponentSpeech from './ExponentSpeech';\nimport { SpeechOptions, SpeechEventCallback, VoiceQuality, Voice, WebVoice } from './Speech.types';\n\nconst SpeechEventEmitter = ExponentSpeech && new NativeEventEmitter(ExponentSpeech);\n\nexport { SpeechOptions, SpeechEventCallback, VoiceQuality, Voice, WebVoice };\n\nconst _CALLBACKS = {};\nlet _nextCallbackId = 1;\nlet _didSetListeners = false;\n\nfunction _unregisterListenersIfNeeded() {\n  if (Object.keys(_CALLBACKS).length === 0) {\n    removeSpeakingListener('Exponent.speakingStarted');\n    removeSpeakingListener('Exponent.speakingDone');\n    removeSpeakingListener('Exponent.speakingStopped');\n    removeSpeakingListener('Exponent.speakingError');\n    _didSetListeners = false;\n  }\n}\n\nfunction _registerListenersIfNeeded() {\n  if (_didSetListeners) return;\n  _didSetListeners = true;\n  setSpeakingListener('Exponent.speakingStarted', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onStart) {\n      options.onStart();\n    }\n  });\n  setSpeakingListener('Exponent.speakingDone', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onDone) {\n      options.onDone();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingStopped', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onStopped) {\n      options.onStopped();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingError', ({ id, error }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onError) {\n      options.onError(new Error(error));\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n}\n\n// @needsAudit\n/**\n * Speak out loud the text given options. Calling this when another text is being spoken adds\n * an utterance to queue.\n * @param text The text to be spoken. Cannot be longer than [`Speech.maxSpeechInputLength`](#speechmaxspeechinputlength).\n * @param options A `SpeechOptions` object.\n */\nexport function speak(text: string, options: SpeechOptions = {}) {\n  const id = _nextCallbackId++;\n  _CALLBACKS[id] = options;\n  _registerListenersIfNeeded();\n  ExponentSpeech.speak(String(id), text, options);\n}\n\n// @needsAudit\n/**\n * Returns list of all available voices.\n * @return List of `Voice` objects.\n */\nexport async function getAvailableVoicesAsync(): Promise<Voice[]> {\n  if (!ExponentSpeech.getVoices) {\n    throw new UnavailabilityError('Speech', 'getVoices');\n  }\n  return ExponentSpeech.getVoices();\n}\n\n//@needsAudit\n/**\n * Determine whether the Text-to-speech utility is currently speaking. Will return `true` if speaker\n * is paused.\n * @return Returns a Promise that fulfils with a boolean, `true` if speaking, `false` if not.\n */\nexport async function isSpeakingAsync(): Promise<boolean> {\n  return ExponentSpeech.isSpeaking();\n}\n\n// @needsAudit\n/**\n * Interrupts current speech and deletes all in queue.\n */\nexport async function stop(): Promise<void> {\n  return ExponentSpeech.stop();\n}\n\n// @needsAudit\n/**\n * Pauses current speech. This method is not available on Android.\n */\nexport async function pause(): Promise<void> {\n  if (!ExponentSpeech.pause) {\n    throw new UnavailabilityError('Speech', 'pause');\n  }\n  return ExponentSpeech.pause();\n}\n\n// @needsAudit\n/**\n * Resumes speaking previously paused speech or does nothing if there's none. This method is not\n * available on Android.\n */\nexport async function resume(): Promise<void> {\n  if (!ExponentSpeech.resume) {\n    throw new UnavailabilityError('Speech', 'resume');\n  }\n\n  return ExponentSpeech.resume();\n}\n\nfunction setSpeakingListener(eventName, callback) {\n  // @ts-ignore: the EventEmitter interface has been changed in react-native@0.64.0\n  const listenerCount = SpeechEventEmitter.listenerCount\n    ? // @ts-ignore: this is available since 0.64\n      SpeechEventEmitter.listenerCount(eventName)\n    : // @ts-ignore: this is available in older versions\n      SpeechEventEmitter.listeners(eventName).length;\n  if (listenerCount > 0) {\n    SpeechEventEmitter.removeAllListeners(eventName);\n  }\n  SpeechEventEmitter.addListener(eventName, callback);\n}\n\nfunction removeSpeakingListener(eventName) {\n  SpeechEventEmitter.removeAllListeners(eventName);\n}\n\n// @needsAudit\n/**\n * Maximum possible text length acceptable by `Speech.speak()` method. It is platform-dependent.\n * On iOS, this returns `Number.MAX_VALUE`.\n */\nexport const maxSpeechInputLength: number = ExponentSpeech.maxSpeechInputLength || Number.MAX_VALUE;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}