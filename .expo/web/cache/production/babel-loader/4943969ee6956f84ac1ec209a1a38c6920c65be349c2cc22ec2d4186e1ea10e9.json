{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";var DialogActions=function DialogActions(props){return React.createElement(View,_extends({},props,{style:[styles.container,props.style]}),React.Children.map(props.children,function(child){return React.isValidElement(child)?React.cloneElement(child,{compact:true}):child;}));};DialogActions.displayName='Dialog.Actions';var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center',justifyContent:'flex-end',padding:8}});export default DialogActions;","map":{"version":3,"names":["React","StyleSheet","View","DialogActions","props","createElement","_extends","style","styles","container","Children","map","children","child","isValidElement","cloneElement","compact","displayName","create","flexDirection","alignItems","justifyContent","padding"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/react-native-paper/lib/module/components/Dialog/DialogActions.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a list of actions in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/dialog-actions.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Actions>\n *           <Button onPress={() => console.log('Cancel')}>Cancel</Button>\n *           <Button onPress={() => console.log('Ok')}>Ok</Button>\n *         </Dialog.Actions>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogActions = (props: Props) => (\n  <View {...props} style={[styles.container, props.style]}>\n    {React.Children.map(props.children, (child) =>\n      React.isValidElement(child)\n        ? React.cloneElement(child, {\n            compact: true,\n          })\n        : child\n    )}\n  </View>\n);\n\nDialogActions.displayName = 'Dialog.Actions';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8,\n  },\n});\n\nexport default DialogActions;\n"],"mappings":"uRAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,QAAAC,UAAA,uDAAAC,IAAA,0CA6CA,GAAM,CAAAC,aAAa,CAAI,QAAjB,CAAAA,aAAaA,CAAIC,KAAD,QACpB,CAAAJ,KAAA,CAAAK,aAAA,CAACH,IAAD,CAAAI,QAAA,IAAUF,KAAV,EAAiBG,KAAK,CAAE,CAACC,MAAM,CAACC,SAAR,CAAmBL,KAAK,CAACG,KAAzB,CAAxB,GACGP,KAAK,CAACU,QAAN,CAAeC,GAAf,CAAmBP,KAAK,CAACQ,QAAzB,CAAoC,SAAAC,KAAD,QAClC,CAAAb,KAAK,CAACc,cAAN,CAAqBD,KAArB,EACIb,KAAK,CAACe,YAAN,CAAmBF,KAAnB,CAA0B,CACxBG,OAAO,CAAE,IADe,CAA1B,CADJ,CAIIH,KALL,GADH,CADF,GAYAV,aAAa,CAACc,WAAd,CAA4B,gBAA5B,CAEA,GAAM,CAAAT,MAAM,CAAGP,UAAU,CAACiB,MAAX,CAAkB,CAC/BT,SAAS,CAAE,CACTU,aAAa,CAAE,KADN,CAETC,UAAU,CAAE,QAFH,CAGTC,cAAc,CAAE,UAHP,CAITC,OAAO,CAAE,CAJA,CADoB,CAAlB,CAAf,CASA,cAAe,CAAAnB,aAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}