{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"theme\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import shadow from\"../styles/shadow\";import{withTheme}from\"../core/theming\";import overlay from\"../styles/overlay\";var Surface=function Surface(_ref){var style=_ref.style,theme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var _ref2=StyleSheet.flatten(style)||{},_ref2$elevation=_ref2.elevation,elevation=_ref2$elevation===void 0?4:_ref2$elevation;var isDarkTheme=theme.dark,mode=theme.mode,colors=theme.colors;return React.createElement(Animated.View,_extends({},rest,{style:[{backgroundColor:isDarkTheme&&mode==='adaptive'?overlay(elevation,colors.surface):colors.surface},elevation?shadow(elevation):null,style]}));};export default withTheme(Surface);","map":{"version":3,"names":["React","Animated","StyleSheet","shadow","withTheme","overlay","Surface","_ref","style","theme","rest","_objectWithoutProperties","_excluded","_ref2","flatten","_ref2$elevation","elevation","isDarkTheme","dark","mode","colors","createElement","View","_extends","backgroundColor","surface"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/react-native-paper/lib/module/components/Surface.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View, StyleProp, ViewStyle } from 'react-native';\nimport shadow from '../styles/shadow';\nimport { withTheme } from '../core/theming';\nimport overlay from '../styles/overlay';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more information.\n * Overlay and shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/surface-1.png\" />\n *   <img src=\"screenshots/surface-2.png\" />\n *   <img src=\"screenshots/surface-3.png\" />\n * </div>\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/surface-dark-1.png\" />\n *   <img src=\"screenshots/surface-dark-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *     elevation: 4,\n *   },\n * });\n * ```\n */\nconst Surface = ({ style, theme, ...rest }: Props) => {\n  const { elevation = 4 } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n  const { dark: isDarkTheme, mode, colors } = theme;\n  return (\n    <Animated.View\n      {...rest}\n      style={[\n        {\n          backgroundColor:\n            isDarkTheme && mode === 'adaptive'\n              ? overlay(elevation, colors.surface)\n              : colors.surface,\n        },\n        elevation ? shadow(elevation) : null,\n        style,\n      ]}\n    />\n  );\n};\n\nexport default withTheme(Surface);\n"],"mappings":"4YAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,QAAAC,QAAA,qDAAAC,UAAA,gDAEA,MAAO,CAAAC,MAAP,wBACA,OAASC,SAAT,uBACA,MAAO,CAAAC,OAAP,yBAyDA,GAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAAC,IAAA,CAAyC,IAAnC,CAAAC,KAAF,CAAAD,IAAA,CAAEC,KAAF,CAASC,KAAT,CAAAF,IAAA,CAASE,KAAT,CAAmBC,IAAA,CAAAC,wBAAA,CAAAJ,IAAA,CAAAK,SAAA,EAClC,IAAAC,KAAA,CAA2BX,UAAU,CAACY,OAAX,CAAmBN,KAAnB,GAA6B,EAAxD,CAAAO,eAAA,CAAAF,KAAA,CAAQG,SAAS,CAATA,SAAS,CAAAD,eAAA,UAAG,EAAAA,eAAA,CACpB,GAAc,CAAAE,WAAR,CAAsCR,KAA5C,CAAQS,IAAI,CAAeC,IAArB,CAAsCV,KAA5C,CAA2BU,IAArB,CAA2BC,MAAA,CAAWX,KAA5C,CAAiCW,MAAA,CACjC,MACE,CAAApB,KAAA,CAAAqB,aAAA,CAACpB,QAAD,CAAUqB,IAAV,CAAAC,QAAA,IACMb,IADN,EAEEF,KAAK,CAAE,CACL,CACEgB,eAAe,CACbP,WAAW,EAAIE,IAAI,GAAK,UAAxB,CACId,OAAO,CAACW,SAAD,CAAYI,MAAM,CAACK,OAAnB,CADX,CAEIL,MAAM,CAACK,OAJf,CADK,CAOLT,SAAS,CAAGb,MAAM,CAACa,SAAD,CAAT,CAAuB,IAP3B,CAQLR,KARK,CAFT,GADF,CAeD,CAlBD,CAoBA,cAAe,CAAAJ,SAAS,CAACE,OAAD,CAAxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}