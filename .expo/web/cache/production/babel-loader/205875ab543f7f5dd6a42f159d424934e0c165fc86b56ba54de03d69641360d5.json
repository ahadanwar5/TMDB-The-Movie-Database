{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"disabled\",\"onPress\",\"theme\",\"value\",\"status\",\"testID\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import{RadioButtonContext}from\"./RadioButtonGroup\";import{handlePress,isChecked}from\"./utils\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import{withTheme}from\"../../core/theming\";var BORDER_WIDTH=2;var RadioButtonAndroid=function RadioButtonAndroid(_ref){var disabled=_ref.disabled,onPress=_ref.onPress,theme=_ref.theme,value=_ref.value,status=_ref.status,testID=_ref.testID,rest=_objectWithoutProperties(_ref,_excluded);var _React$useRef=React.useRef(new Animated.Value(BORDER_WIDTH)),borderAnim=_React$useRef.current;var _React$useRef2=React.useRef(new Animated.Value(1)),radioAnim=_React$useRef2.current;var isFirstRendering=React.useRef(true);var scale=theme.animation.scale;React.useEffect(function(){if(isFirstRendering.current){isFirstRendering.current=false;return;}if(status==='checked'){radioAnim.setValue(1.2);Animated.timing(radioAnim,{toValue:1,duration:150*scale,useNativeDriver:true}).start();}else{borderAnim.setValue(10);Animated.timing(borderAnim,{toValue:BORDER_WIDTH,duration:150*scale,useNativeDriver:false}).start();}},[status,borderAnim,radioAnim,scale]);var checkedColor=rest.color||theme.colors.accent;var uncheckedColor=rest.uncheckedColor||color(theme.colors.text).alpha(theme.dark?0.7:0.54).rgb().string();var rippleColor,radioColor;return React.createElement(RadioButtonContext.Consumer,null,function(context){var checked=isChecked({contextValue:context===null||context===void 0?void 0:context.value,status:status,value:value})==='checked';if(disabled){rippleColor=color(theme.colors.text).alpha(0.16).rgb().string();radioColor=theme.colors.disabled;}else{rippleColor=color(checkedColor).fade(0.32).rgb().string();radioColor=checked?checkedColor:uncheckedColor;}return React.createElement(TouchableRipple,_extends({},rest,{borderless:true,rippleColor:rippleColor,onPress:disabled?undefined:function(){handlePress({onPress:onPress,onValueChange:context===null||context===void 0?void 0:context.onValueChange,value:value});},accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:checked?'radiobutton_checked':'radiobutton_unchecked',accessibilityRole:\"radio\",accessibilityState:{disabled:disabled,checked:checked},accessibilityLiveRegion:\"polite\",style:styles.container,testID:testID}),React.createElement(Animated.View,{style:[styles.radio,{borderColor:radioColor,borderWidth:borderAnim}]},checked?React.createElement(View,{style:[StyleSheet.absoluteFill,styles.radioContainer]},React.createElement(Animated.View,{style:[styles.dot,{backgroundColor:radioColor,transform:[{scale:radioAnim}]}]})):null));});};RadioButtonAndroid.displayName='RadioButton.Android';var styles=StyleSheet.create({container:{borderRadius:18},radioContainer:{alignItems:'center',justifyContent:'center'},radio:{height:20,width:20,borderRadius:10,margin:8},dot:{height:10,width:10,borderRadius:5}});export default withTheme(RadioButtonAndroid);var RadioButtonAndroidWithTheme=withTheme(RadioButtonAndroid);export{RadioButtonAndroidWithTheme as RadioButtonAndroid};","map":{"version":3,"names":["React","Animated","View","StyleSheet","color","RadioButtonContext","handlePress","isChecked","TouchableRipple","withTheme","BORDER_WIDTH","RadioButtonAndroid","_ref","disabled","onPress","theme","value","status","testID","rest","_objectWithoutProperties","_excluded","_React$useRef","useRef","Value","borderAnim","current","_React$useRef2","radioAnim","isFirstRendering","scale","animation","useEffect","setValue","timing","toValue","duration","useNativeDriver","start","checkedColor","colors","accent","uncheckedColor","text","alpha","dark","rgb","string","rippleColor","radioColor","createElement","Consumer","context","checked","contextValue","fade","_extends","borderless","undefined","onValueChange","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","radio","borderColor","borderWidth","absoluteFill","radioContainer","dot","backgroundColor","transform","displayName","create","borderRadius","alignItems","justifyContent","height","width","margin","RadioButtonAndroidWithTheme"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/react-native-paper/lib/module/components/RadioButton/RadioButtonAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport color from 'color';\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (param?: any) => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst BORDER_WIDTH = 2;\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nconst RadioButtonAndroid = ({\n  disabled,\n  onPress,\n  theme,\n  value,\n  status,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: borderAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(BORDER_WIDTH)\n  );\n\n  const { current: radioAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    if (status === 'checked') {\n      radioAnim.setValue(1.2);\n\n      Animated.timing(radioAnim, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      borderAnim.setValue(10);\n\n      Animated.timing(borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150 * scale,\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [status, borderAnim, radioAnim, scale]);\n\n  const checkedColor = rest.color || theme.colors.accent;\n  const uncheckedColor =\n    rest.uncheckedColor ||\n    color(theme.colors.text)\n      .alpha(theme.dark ? 0.7 : 0.54)\n      .rgb()\n      .string();\n\n  let rippleColor: string, radioColor: string;\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        const checked =\n          isChecked({\n            contextValue: context?.value,\n            status,\n            value,\n          }) === 'checked';\n\n        if (disabled) {\n          rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n          radioColor = theme.colors.disabled;\n        } else {\n          rippleColor = color(checkedColor).fade(0.32).rgb().string();\n          radioColor = checked ? checkedColor : uncheckedColor;\n        }\n\n        return (\n          <TouchableRipple\n            {...rest}\n            borderless\n            rippleColor={rippleColor}\n            onPress={\n              disabled\n                ? undefined\n                : () => {\n                    handlePress({\n                      onPress,\n                      onValueChange: context?.onValueChange,\n                      value,\n                    });\n                  }\n            }\n            // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n            accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n            accessibilityComponentType={\n              checked ? 'radiobutton_checked' : 'radiobutton_unchecked'\n            }\n            accessibilityRole=\"radio\"\n            accessibilityState={{ disabled, checked }}\n            accessibilityLiveRegion=\"polite\"\n            style={styles.container}\n            testID={testID}\n          >\n            <Animated.View\n              style={[\n                styles.radio,\n                {\n                  borderColor: radioColor,\n                  borderWidth: borderAnim,\n                },\n              ]}\n            >\n              {checked ? (\n                <View style={[StyleSheet.absoluteFill, styles.radioContainer]}>\n                  <Animated.View\n                    style={[\n                      styles.dot,\n                      {\n                        backgroundColor: radioColor,\n                        transform: [{ scale: radioAnim }],\n                      },\n                    ]}\n                  />\n                </View>\n              ) : null}\n            </Animated.View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonAndroid.displayName = 'RadioButton.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8,\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5,\n  },\n});\n\nexport default withTheme(RadioButtonAndroid);\n\n// @component-docs ignore-next-line\nconst RadioButtonAndroidWithTheme = withTheme(RadioButtonAndroid);\n// @component-docs ignore-next-line\nexport { RadioButtonAndroidWithTheme as RadioButtonAndroid };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}