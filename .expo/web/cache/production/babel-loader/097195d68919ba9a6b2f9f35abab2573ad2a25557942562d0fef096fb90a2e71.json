{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";var DialogContent=function DialogContent(props){return React.createElement(View,_extends({},props,{style:[styles.container,props.style]}),props.children);};DialogContent.displayName='Dialog.Content';var styles=StyleSheet.create({container:{paddingBottom:24,paddingHorizontal:24}});export default DialogContent;","map":{"version":3,"names":["React","View","StyleSheet","DialogContent","props","createElement","_extends","style","styles","container","children","displayName","create","paddingBottom","paddingHorizontal"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/react-native-paper/lib/module/components/Dialog/DialogContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogContent`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show content in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/dialog-content.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Paragraph, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Content>\n *           <Paragraph>This is simple dialog</Paragraph>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogContent = (props: Props) => (\n  <View {...props} style={[styles.container, props.style]}>\n    {props.children}\n  </View>\n);\n\nDialogContent.displayName = 'Dialog.Content';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingBottom: 24,\n    paddingHorizontal: 24,\n  },\n});\n\nexport default DialogContent;\n"],"mappings":"uRAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,QAAAC,IAAA,iDAAAC,UAAA,gDA6CA,GAAM,CAAAC,aAAa,CAAI,QAAjB,CAAAA,aAAaA,CAAIC,KAAD,QACpB,CAAAJ,KAAA,CAAAK,aAAA,CAACJ,IAAD,CAAAK,QAAA,IAAUF,KAAV,EAAiBG,KAAK,CAAE,CAACC,MAAM,CAACC,SAAR,CAAmBL,KAAK,CAACG,KAAzB,CAAxB,GACGH,KAAK,CAACM,QADT,CADF,GAMAP,aAAa,CAACQ,WAAd,CAA4B,gBAA5B,CAEA,GAAM,CAAAH,MAAM,CAAGN,UAAU,CAACU,MAAX,CAAkB,CAC/BH,SAAS,CAAE,CACTI,aAAa,CAAE,EADN,CAETC,iBAAiB,CAAE,EAFV,CADoB,CAAlB,CAAf,CAOA,cAAe,CAAAX,aAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}