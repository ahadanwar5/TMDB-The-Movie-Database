{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"onPress\",\"style\",\"theme\",\"children\",\"pointerEvents\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import color from'color';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import{black,white}from\"../../styles/colors\";import{withTheme}from\"../../core/theming\";var DataTableRow=function DataTableRow(_ref){var onPress=_ref.onPress,style=_ref.style,theme=_ref.theme,children=_ref.children,pointerEvents=_ref.pointerEvents,rest=_objectWithoutProperties(_ref,_excluded);var borderBottomColor=color(theme.dark?white:black).alpha(0.12).rgb().string();return React.createElement(TouchableRipple,_extends({},rest,{onPress:onPress,style:[styles.container,{borderBottomColor:borderBottomColor},style]}),React.createElement(View,{style:styles.content,pointerEvents:pointerEvents},children));};var styles=StyleSheet.create({container:{borderStyle:'solid',borderBottomWidth:StyleSheet.hairlineWidth,minHeight:48,paddingHorizontal:16},content:{flex:1,flexDirection:'row'}});export default withTheme(DataTableRow);export{DataTableRow};","map":{"version":3,"names":["React","color","StyleSheet","View","TouchableRipple","black","white","withTheme","DataTableRow","_ref","onPress","style","theme","children","pointerEvents","rest","_objectWithoutProperties","_excluded","borderBottomColor","dark","alpha","rgb","string","createElement","_extends","styles","container","content","create","borderStyle","borderBottomWidth","hairlineWidth","minHeight","paddingHorizontal","flex","flexDirection"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/react-native-paper/lib/module/components/DataTable/DataTableRow.tsx"],"sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  ViewProps,\n} from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * `pointerEvents` passed to the `View` container, which is wrapping children within `TouchableRipple`.\n   */\n  pointerEvents?: ViewProps['pointerEvents'];\n};\n\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableRow = ({\n  onPress,\n  style,\n  theme,\n  children,\n  pointerEvents,\n  ...rest\n}: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      onPress={onPress}\n      style={[styles.container, { borderBottomColor }, style]}\n    >\n      <View style={styles.content} pointerEvents={pointerEvents}>\n        {children}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"],"mappings":"ibAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAO,CAAAC,KAAP,KAAkB,OAAlB,QAAAC,UAAA,uDAAAC,IAAA,0CAQA,MAAO,CAAAC,eAAP,0CACA,OAASC,KAAT,CAAgBC,KAAhB,2BACA,OAASC,SAAT,0BAmDA,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAAC,IAAA,CAOL,IANX,CAAAC,OADoB,CAAAD,IAAA,CACpBC,OADoB,CAEpBC,KAFoB,CAAAF,IAAA,CAEpBE,KAFoB,CAGpBC,KAHoB,CAAAH,IAAA,CAGpBG,KAHoB,CAIpBC,QAJoB,CAAAJ,IAAA,CAIpBI,QAJoB,CAKpBC,aALoB,CAAAL,IAAA,CAKpBK,aALoB,CAMjBC,IAAA,CAAAC,wBAAA,CAAAP,IAAA,CAAAQ,SAAA,EAEH,GAAM,CAAAC,iBAAiB,CAAGjB,KAAK,CAACW,KAAK,CAACO,IAAN,CAAab,KAAb,CAAqBD,KAAtB,CAAL,CACvBe,KADuB,CACjB,IADiB,EAEvBC,GAFuB,GAGvBC,MAHuB,EAA1B,CAKA,MACE,CAAAtB,KAAA,CAAAuB,aAAA,CAACnB,eAAD,CAAAoB,QAAA,IACMT,IADN,EAEEL,OAAO,CAAEA,OAFX,CAGEC,KAAK,CAAE,CAACc,MAAM,CAACC,SAAR,CAAmB,CAAER,iBAAA,CAAAA,iBAAF,CAAnB,CAA0CP,KAA1C,CAHT,GAKEX,KAAA,CAAAuB,aAAA,CAACpB,IAAD,EAAMQ,KAAK,CAAEc,MAAM,CAACE,OAApB,CAA6Bb,aAAa,CAAEA,aAA5C,EACGD,QADH,CALF,CADF,CAWD,CAxBD,CA0BA,GAAM,CAAAY,MAAM,CAAGvB,UAAU,CAAC0B,MAAX,CAAkB,CAC/BF,SAAS,CAAE,CACTG,WAAW,CAAE,OADJ,CAETC,iBAAiB,CAAE5B,UAAU,CAAC6B,aAFrB,CAGTC,SAAS,CAAE,EAHF,CAITC,iBAAiB,CAAE,EAJV,CADoB,CAO/BN,OAAO,CAAE,CACPO,IAAI,CAAE,CADC,CAEPC,aAAa,CAAE,KAFR,CAPsB,CAAlB,CAAf,CAaA,cAAe,CAAA5B,SAAS,CAACC,YAAD,CAAxB,CAGA,OAASA,YAAT"},"metadata":{},"sourceType":"module","externalDependencies":[]}