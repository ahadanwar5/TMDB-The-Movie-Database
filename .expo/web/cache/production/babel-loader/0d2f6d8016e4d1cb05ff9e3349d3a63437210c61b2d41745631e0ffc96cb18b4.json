{"ast":null,"code":"import*as React from'react';export var ToggleButtonGroupContext=React.createContext(null);var ToggleButtonGroup=function ToggleButtonGroup(_ref){var value=_ref.value,onValueChange=_ref.onValueChange,children=_ref.children;return React.createElement(ToggleButtonGroupContext.Provider,{value:{value:value,onValueChange:onValueChange}},children);};ToggleButtonGroup.displayName='ToggleButton.Group';export default ToggleButtonGroup;export{ToggleButtonGroup};","map":{"version":3,"names":["React","ToggleButtonGroupContext","createContext","ToggleButtonGroup","_ref","value","onValueChange","children","createElement","Provider","displayName"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/react-native-paper/lib/module/components/ToggleButton/ToggleButtonGroup.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => void | null;\n  /**\n   * Value of the currently selected toggle button.\n   */\n  value: string | null;\n  /**\n   * React elements containing toggle buttons.\n   */\n  children: React.ReactNode;\n};\n\ntype ToggleButtonContextType = {\n  value: string | null;\n  onValueChange: (item: string) => void | null;\n};\n\nexport const ToggleButtonGroupContext = React.createContext<\n  ToggleButtonContextType\n>(null as any);\n\n/**\n * Toggle group allows to control a group of toggle buttons.</br>\n * It doesn't change the appearance of the toggle buttons. If you want to group them in a row, check out <a href=\"toggle-button-row.html\">`ToggleButton.Row`</a>.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/toggle-button-group.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ToggleButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('left');\n *\n *   return (\n *     <ToggleButton.Group\n *       onValueChange={value => setValue(value)}\n *       value={value}>\n *       <ToggleButton icon=\"format-align-left\" value=\"left\" />\n *       <ToggleButton icon=\"format-align-right\" value=\"right\" />\n *     </ToggleButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nconst ToggleButtonGroup = ({ value, onValueChange, children }: Props) => (\n  <ToggleButtonGroupContext.Provider\n    value={{\n      value,\n      onValueChange,\n    }}\n  >\n    {children}\n  </ToggleButtonGroupContext.Provider>\n);\n\nToggleButtonGroup.displayName = 'ToggleButton.Group';\n\nexport default ToggleButtonGroup;\n\n// @component-docs ignore-next-line\nexport { ToggleButtonGroup };\n"],"mappings":"AAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,CAsBA,MAAO,IAAM,CAAAC,wBAAwB,CAAGD,KAAK,CAACE,aAAN,CAEtC,IAFsC,CAAjC,CAmCP,GAAM,CAAAC,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAAC,IAAA,KAAM,CAAAC,KAAF,CAAAD,IAAA,CAAEC,KAAF,CAASC,aAAT,CAAAF,IAAA,CAASE,aAAT,CAAwBC,QAAA,CAAAH,IAAA,CAAAG,QAAA,OACjD,CAAAP,KAAA,CAAAQ,aAAA,CAACP,wBAAD,CAA0BQ,QAA1B,EACEJ,KAAK,CAAE,CACLA,KADK,CACLA,KADK,CAELC,aAAA,CAAAA,aAFK,CADT,EAMGC,QANH,CADF,GAWAJ,iBAAiB,CAACO,WAAlB,CAAgC,oBAAhC,CAEA,cAAe,CAAAP,iBAAf,CAGA,OAASA,iBAAT"},"metadata":{},"sourceType":"module","externalDependencies":[]}