{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"size\",\"color\",\"icon\",\"disabled\",\"onPress\",\"accessibilityLabel\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import color from'color';import{black}from\"../../styles/colors\";import IconButton from\"../IconButton\";var AppbarAction=function AppbarAction(_ref){var _ref$size=_ref.size,size=_ref$size===void 0?24:_ref$size,_ref$color=_ref.color,iconColor=_ref$color===void 0?color(black).alpha(0.54).rgb().string():_ref$color,icon=_ref.icon,disabled=_ref.disabled,onPress=_ref.onPress,accessibilityLabel=_ref.accessibilityLabel,rest=_objectWithoutProperties(_ref,_excluded);return React.createElement(IconButton,_extends({size:size,onPress:onPress,color:iconColor,icon:icon,disabled:disabled,accessibilityLabel:accessibilityLabel,animated:true},rest));};AppbarAction.displayName='Appbar.Action';export default AppbarAction;export{AppbarAction};","map":{"version":3,"names":["React","color","black","IconButton","AppbarAction","_ref","_ref$size","size","_ref$color","iconColor","alpha","rgb","string","icon","disabled","onPress","accessibilityLabel","rest","_objectWithoutProperties","_excluded","createElement","_extends","animated","displayName"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/react-native-paper/lib/module/components/Appbar/AppbarAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport type {\n  StyleProp,\n  ViewStyle,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport { black } from '../../styles/colors';\nimport IconButton from '../IconButton';\nimport type { IconSource } from '../Icon';\n\ntype Props = React.ComponentPropsWithoutRef<typeof IconButton> & {\n  /**\n   *  Custom color for action icon.\n   */\n  color?: string;\n  /**\n   * Name of the icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<TouchableWithoutFeedback>;\n};\n\n/**\n * A component used to display an action item in the appbar.\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-action-android.png\" />\n *       <figcaption>Android</figcaption>\n *   </figure>\n * </div>\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-action-ios.png\" />\n *       <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { Platform } from 'react-native';\n *\n * const MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *         <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n *         <Appbar.Action icon={MORE_ICON} onPress={() => {}} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarAction = ({\n  size = 24,\n  color: iconColor = color(black).alpha(0.54).rgb().string(),\n  icon,\n  disabled,\n  onPress,\n  accessibilityLabel,\n  ...rest\n}: Props) => (\n  <IconButton\n    size={size}\n    onPress={onPress}\n    color={iconColor}\n    icon={icon}\n    disabled={disabled}\n    accessibilityLabel={accessibilityLabel}\n    animated\n    {...rest}\n  />\n);\n\nAppbarAction.displayName = 'Appbar.Action';\n\nexport default AppbarAction;\n\n// @component-docs ignore-next-line\nexport { AppbarAction };\n"],"mappings":"4bAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAO,CAAAC,KAAP,KAAkB,OAAlB,CAMA,OAASC,KAAT,2BACA,MAAO,CAAAC,UAAP,qBAmEA,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAAC,IAAA,MAAAC,SAAA,CAAAD,IAAA,CAChBE,IAAI,CAAJA,IAAI,CAAAD,SAAA,UAAG,EADa,CAAAA,SAAA,CAAAE,UAAA,CAAAH,IAAA,CAEpBJ,KAAK,CAAEQ,SAAS,CAAAD,UAAA,UAAGP,KAAK,CAACC,KAAD,CAAL,CAAaQ,KAAb,CAAmB,IAAnB,EAAyBC,GAAzB,GAA+BC,MAA/B,EAFC,CAAAJ,UAAA,CAGpBK,IAHoB,CAAAR,IAAA,CAGpBQ,IAHoB,CAIpBC,QAJoB,CAAAT,IAAA,CAIpBS,QAJoB,CAKpBC,OALoB,CAAAV,IAAA,CAKpBU,OALoB,CAMpBC,kBANoB,CAAAX,IAAA,CAMpBW,kBANoB,CAOjBC,IAAA,CAAAC,wBAAA,CAAAb,IAAA,CAAAc,SAAA,QAEH,CAAAnB,KAAA,CAAAoB,aAAA,CAACjB,UAAD,CAAAkB,QAAA,EACEd,IAAI,CAAEA,IADR,CAEEQ,OAAO,CAAEA,OAFX,CAGEd,KAAK,CAAEQ,SAHT,CAIEI,IAAI,CAAEA,IAJR,CAKEC,QAAQ,CAAEA,QALZ,CAMEE,kBAAkB,CAAEA,kBANtB,CAOEM,QAAQ,KAPV,EAQML,IARN,EATF,GAqBAb,YAAY,CAACmB,WAAb,CAA2B,eAA3B,CAEA,cAAe,CAAAnB,YAAf,CAGA,OAASA,YAAT"},"metadata":{},"sourceType":"module","externalDependencies":[]}