{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _excluded=[\"name\",\"onPress\",\"forceTextInputFocus\",\"color\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import IconButton from\"../../IconButton\";export var ICON_SIZE=24;var ICON_OFFSET=12;var StyleContext=React.createContext({style:{},isTextInputFocused:false,forceFocus:function forceFocus(){}});var IconAdornment=function IconAdornment(_ref){var icon=_ref.icon,topPosition=_ref.topPosition,side=_ref.side,isTextInputFocused=_ref.isTextInputFocused,forceFocus=_ref.forceFocus;var style=_defineProperty({top:topPosition},side,ICON_OFFSET);var contextState={style:style,isTextInputFocused:isTextInputFocused,forceFocus:forceFocus};return React.createElement(StyleContext.Provider,{value:contextState},icon);};var TextInputIcon=function TextInputIcon(_ref2){var name=_ref2.name,onPress=_ref2.onPress,forceTextInputFocus=_ref2.forceTextInputFocus,color=_ref2.color,rest=_objectWithoutProperties(_ref2,_excluded);var _React$useContext=React.useContext(StyleContext),style=_React$useContext.style,isTextInputFocused=_React$useContext.isTextInputFocused,forceFocus=_React$useContext.forceFocus;var onPressWithFocusControl=React.useCallback(function(){if(forceTextInputFocus&&!isTextInputFocused){forceFocus();}onPress===null||onPress===void 0?void 0:onPress();},[forceTextInputFocus,forceFocus,isTextInputFocused,onPress]);return React.createElement(View,{style:[styles.container,style]},React.createElement(IconButton,_extends({icon:name,style:styles.iconButton,size:ICON_SIZE,onPress:onPressWithFocusControl,color:typeof color==='function'?color(isTextInputFocused):color},rest)));};TextInputIcon.displayName='TextInput.Icon';TextInputIcon.defaultProps={forceTextInputFocus:true};var styles=StyleSheet.create({container:{position:'absolute',width:ICON_SIZE,height:ICON_SIZE,justifyContent:'center',alignItems:'center'},iconButton:{margin:0}});export default TextInputIcon;export{IconAdornment};","map":{"version":3,"names":["React","View","StyleSheet","IconButton","ICON_SIZE","ICON_OFFSET","StyleContext","createContext","style","isTextInputFocused","forceFocus","IconAdornment","_ref","icon","topPosition","side","_defineProperty","top","contextState","createElement","Provider","value","TextInputIcon","_ref2","name","onPress","forceTextInputFocus","color","rest","_objectWithoutProperties","_excluded","_React$useContext","useContext","onPressWithFocusControl","useCallback","styles","container","_extends","iconButton","size","displayName","defaultProps","create","position","width","height","justifyContent","alignItems","margin"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/react-native-paper/lib/module/components/TextInput/Adornment/TextInputIcon.tsx"],"sourcesContent":["import React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\n\nimport IconButton from '../../IconButton';\nimport type { $Omit } from '../../../../src/types';\nimport type { IconSource } from '../../Icon';\n\ntype Props = $Omit<\n  React.ComponentProps<typeof IconButton>,\n  'icon' | 'theme' | 'color'\n> & {\n  /**\n   * Icon to show.\n   */\n  name: IconSource;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the TextInput will focus after onPress.\n   */\n  forceTextInputFocus?: boolean;\n  /**\n   * Color of the icon or a function receiving a boolean indicating whether the TextInput is focused and returning the color.\n   */\n  color?: ((isTextInputFocused: boolean) => string | undefined) | string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ReactNativePaper.Theme;\n};\n\nexport const ICON_SIZE = 24;\nconst ICON_OFFSET = 12;\n\ntype StyleContextType = {\n  style: StyleProp<ViewStyle>;\n  isTextInputFocused: boolean;\n  forceFocus: () => void;\n};\n\nconst StyleContext = React.createContext<StyleContextType>({\n  style: {},\n  isTextInputFocused: false,\n  forceFocus: () => {},\n});\n\nconst IconAdornment: React.FunctionComponent<\n  {\n    testID: string;\n    icon: React.ReactNode;\n    topPosition: number;\n    side: 'left' | 'right';\n  } & Omit<StyleContextType, 'style'>\n> = ({ icon, topPosition, side, isTextInputFocused, forceFocus }) => {\n  const style = {\n    top: topPosition,\n    [side]: ICON_OFFSET,\n  };\n  const contextState = { style, isTextInputFocused, forceFocus };\n\n  return (\n    <StyleContext.Provider value={contextState}>{icon}</StyleContext.Provider>\n  );\n};\n\n/**\n * A component to render a leading / trailing icon in the TextInput\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-flat.icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       label=\"Password\"\n *       secureTextEntry\n *       right={<TextInput.Icon name=\"eye\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst TextInputIcon = ({\n  name,\n  onPress,\n  forceTextInputFocus,\n  color,\n  ...rest\n}: Props) => {\n  const { style, isTextInputFocused, forceFocus } = React.useContext(\n    StyleContext\n  );\n\n  const onPressWithFocusControl = React.useCallback(() => {\n    if (forceTextInputFocus && !isTextInputFocused) {\n      forceFocus();\n    }\n    onPress?.();\n  }, [forceTextInputFocus, forceFocus, isTextInputFocused, onPress]);\n\n  return (\n    <View style={[styles.container, style]}>\n      <IconButton\n        icon={name}\n        style={styles.iconButton}\n        size={ICON_SIZE}\n        onPress={onPressWithFocusControl}\n        color={typeof color === 'function' ? color(isTextInputFocused) : color}\n        {...rest}\n      />\n    </View>\n  );\n};\nTextInputIcon.displayName = 'TextInput.Icon';\n\nTextInputIcon.defaultProps = {\n  forceTextInputFocus: true,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: ICON_SIZE,\n    height: ICON_SIZE,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconButton: {\n    margin: 0,\n  },\n});\n\nexport default TextInputIcon;\n\n// @component-docs ignore-next-line\nexport { IconAdornment };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}