{"ast":null,"code":"'use strict';var validateFormat=process.env.NODE_ENV!==\"production\"?function(format){if(format===undefined){throw new Error('invariant(...): Second argument must be a string.');}}:function(format){};function invariant(condition,format){for(var _len=arguments.length,args=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){args[_key-2]=arguments[_key];}validateFormat(format);if(!condition){var error;if(format===undefined){error=new Error('Minified exception occurred; use the non-minified dev environment '+'for the full error message and additional helpful warnings.');}else{var argIndex=0;error=new Error(format.replace(/%s/g,function(){return String(args[argIndex++]);}));error.name='Invariant Violation';}error.framesToPop=1;throw error;}}module.exports=invariant;","map":{"version":3,"names":["validateFormat","process","env","NODE_ENV","format","undefined","Error","invariant","condition","_len","arguments","length","args","Array","_key","error","argIndex","replace","String","name","framesToPop","module","exports"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/react-native-web/node_modules/fbjs/lib/invariant.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nvar validateFormat = process.env.NODE_ENV !== \"production\" ? function (format) {\n  if (format === undefined) {\n    throw new Error('invariant(...): Second argument must be a string.');\n  }\n} : function (format) {};\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments to provide\n * information about what broke and what you were expecting.\n *\n * The invariant message will be stripped in production, but the invariant will\n * remain to ensure logic does not differ in production.\n */\n\nfunction invariant(condition, format) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return String(args[argIndex++]);\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // Skip invariant's own stack frame.\n\n    throw error;\n  }\n}\n\nmodule.exports = invariant;"],"mappings":"AAQA,YAAY,CAEZ,GAAI,CAAAA,cAAc,CAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAG,SAAUC,MAAM,CAAE,CAC7E,GAAIA,MAAM,GAAKC,SAAS,CAAE,CACxB,KAAM,IAAI,CAAAC,KAAK,CAAC,mDAAmD,CAAC,CACtE,CACF,CAAC,CAAG,SAAUF,MAAM,CAAE,CAAC,CAAC,CAWxB,QAAS,CAAAG,SAASA,CAACC,SAAS,CAAEJ,MAAM,CAAE,CACpC,IAAK,GAAI,CAAAK,IAAI,CAAGC,SAAS,CAACC,MAAM,CAAEC,IAAI,CAAG,GAAI,CAAAC,KAAK,CAACJ,IAAI,CAAG,CAAC,CAAGA,IAAI,CAAG,CAAC,CAAG,CAAC,CAAC,CAAEK,IAAI,CAAG,CAAC,CAAEA,IAAI,CAAGL,IAAI,CAAEK,IAAI,EAAE,CAAE,CAC1GF,IAAI,CAACE,IAAI,CAAG,CAAC,CAAC,CAAGJ,SAAS,CAACI,IAAI,CAAC,CAClC,CAEAd,cAAc,CAACI,MAAM,CAAC,CAEtB,GAAI,CAACI,SAAS,CAAE,CACd,GAAI,CAAAO,KAAK,CAET,GAAIX,MAAM,GAAKC,SAAS,CAAE,CACxBU,KAAK,CAAG,GAAI,CAAAT,KAAK,CAAC,oEAAoE,CAAG,6DAA6D,CAAC,CACzJ,CAAC,IAAM,CACL,GAAI,CAAAU,QAAQ,CAAG,CAAC,CAChBD,KAAK,CAAG,GAAI,CAAAT,KAAK,CAACF,MAAM,CAACa,OAAO,CAAC,KAAK,CAAE,UAAY,CAClD,MAAO,CAAAC,MAAM,CAACN,IAAI,CAACI,QAAQ,EAAE,CAAC,CAAC,CACjC,CAAC,CAAC,CAAC,CACHD,KAAK,CAACI,IAAI,CAAG,qBAAqB,CACpC,CAEAJ,KAAK,CAACK,WAAW,CAAG,CAAC,CAErB,KAAM,CAAAL,KAAK,CACb,CACF,CAEAM,MAAM,CAACC,OAAO,CAAGf,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}