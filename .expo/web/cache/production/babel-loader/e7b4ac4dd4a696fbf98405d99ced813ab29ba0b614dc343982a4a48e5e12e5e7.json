{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"value\",\"disabled\",\"onValueChange\",\"color\",\"theme\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import{grey400,grey800,grey50,white,black}from\"../styles/colors\";import NativeModules from\"react-native-web/dist/exports/NativeModules\";import Platform from\"react-native-web/dist/exports/Platform\";import NativeSwitch from\"react-native-web/dist/exports/Switch\";import setColor from'color';import{withTheme}from\"../core/theming\";var version=NativeModules.PlatformConstants?NativeModules.PlatformConstants.reactNativeVersion:undefined;var Switch=function Switch(_ref){var value=_ref.value,disabled=_ref.disabled,onValueChange=_ref.onValueChange,color=_ref.color,theme=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var checkedColor=color||theme.colors.accent;var onTintColor=Platform.OS==='ios'?checkedColor:disabled?theme.dark?setColor(white).alpha(0.1).rgb().string():setColor(black).alpha(0.12).rgb().string():setColor(checkedColor).alpha(0.5).rgb().string();var thumbTintColor=Platform.OS==='ios'?undefined:disabled?theme.dark?grey800:grey400:value?checkedColor:theme.dark?grey400:grey50;var props=version&&version.major===0&&version.minor<=56?{onTintColor:onTintColor,thumbTintColor:thumbTintColor}:Platform.OS==='web'?{activeTrackColor:onTintColor,thumbColor:thumbTintColor,activeThumbColor:checkedColor}:{thumbColor:thumbTintColor,trackColor:{true:onTintColor,false:''}};return React.createElement(NativeSwitch,_extends({value:value,disabled:disabled,onValueChange:disabled?undefined:onValueChange},props,rest));};export default withTheme(Switch);","map":{"version":3,"names":["React","grey400","grey800","grey50","white","black","NativeModules","Platform","NativeSwitch","setColor","withTheme","version","PlatformConstants","reactNativeVersion","undefined","Switch","_ref","value","disabled","onValueChange","color","theme","rest","_objectWithoutProperties","_excluded","checkedColor","colors","accent","onTintColor","OS","dark","alpha","rgb","string","thumbTintColor","props","major","minor","activeTrackColor","thumbColor","activeThumbColor","trackColor","true","false","createElement","_extends"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/react-native-paper/lib/module/components/Switch.tsx"],"sourcesContent":["import * as React from 'react';\nimport { grey400, grey800, grey50, white, black } from '../styles/colors';\nimport {\n  NativeModules,\n  Platform,\n  StyleProp,\n  Switch as NativeSwitch,\n  ViewStyle,\n} from 'react-native';\nimport setColor from 'color';\nimport { withTheme } from '../core/theming';\n\nconst version = NativeModules.PlatformConstants\n  ? NativeModules.PlatformConstants.reactNativeVersion\n  : undefined;\n\ntype Props = React.ComponentPropsWithRef<typeof NativeSwitch> & {\n  /**\n   * Disable toggling the switch.\n   */\n  disabled?: boolean;\n  /**\n   * Value of the switch, true means 'on', false means 'off'.\n   */\n  value?: boolean;\n  /**\n   * Custom color for switch.\n   */\n  color?: string;\n  /**\n   * Callback called with the new value when it changes.\n   */\n  onValueChange?: Function;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Switch is a visual toggle between two mutually exclusive states â€” on and off.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/switch-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Switch } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [isSwitchOn, setIsSwitchOn] = React.useState(false);\n *\n *   const onToggleSwitch = () => setIsSwitchOn(!isSwitchOn);\n *\n *   return <Switch value={isSwitchOn} onValueChange={onToggleSwitch} />;\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Switch = ({\n  value,\n  disabled,\n  onValueChange,\n  color,\n  theme,\n  ...rest\n}: Props) => {\n  const checkedColor = color || theme.colors.accent;\n\n  const onTintColor =\n    Platform.OS === 'ios'\n      ? checkedColor\n      : disabled\n      ? theme.dark\n        ? setColor(white).alpha(0.1).rgb().string()\n        : setColor(black).alpha(0.12).rgb().string()\n      : setColor(checkedColor).alpha(0.5).rgb().string();\n\n  const thumbTintColor =\n    Platform.OS === 'ios'\n      ? undefined\n      : disabled\n      ? theme.dark\n        ? grey800\n        : grey400\n      : value\n      ? checkedColor\n      : theme.dark\n      ? grey400\n      : grey50;\n\n  const props =\n    version && version.major === 0 && version.minor <= 56\n      ? {\n          onTintColor,\n          thumbTintColor,\n        }\n      : Platform.OS === 'web'\n      ? {\n          activeTrackColor: onTintColor,\n          thumbColor: thumbTintColor,\n          activeThumbColor: checkedColor,\n        }\n      : {\n          thumbColor: thumbTintColor,\n          trackColor: {\n            true: onTintColor,\n            false: '',\n          },\n        };\n\n  return (\n    <NativeSwitch\n      value={value}\n      disabled={disabled}\n      onValueChange={disabled ? undefined : onValueChange}\n      {...props}\n      {...rest}\n    />\n  );\n};\n\nexport default withTheme(Switch);\n"],"mappings":"+aAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,OAAT,CAAkBC,OAAlB,CAA2BC,MAA3B,CAAmCC,KAAnC,CAA0CC,KAA1C,+BAAAC,aAAA,0DAAAC,QAAA,qDAAAC,YAAA,4CAQA,MAAO,CAAAC,QAAP,KAAqB,OAArB,CACA,OAASC,SAAT,uBAEA,GAAM,CAAAC,OAAO,CAAGL,aAAa,CAACM,iBAAd,CACZN,aAAa,CAACM,iBAAd,CAAgCC,kBADpB,CAEZC,SAFJ,CAkEA,GAAM,CAAAC,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAAC,IAAA,CAOC,IANX,CAAAC,KADc,CAAAD,IAAA,CACdC,KADc,CAEdC,QAFc,CAAAF,IAAA,CAEdE,QAFc,CAGdC,aAHc,CAAAH,IAAA,CAGdG,aAHc,CAIdC,KAJc,CAAAJ,IAAA,CAIdI,KAJc,CAKdC,KALc,CAAAL,IAAA,CAKdK,KALc,CAMXC,IAAA,CAAAC,wBAAA,CAAAP,IAAA,CAAAQ,SAAA,EAEH,GAAM,CAAAC,YAAY,CAAGL,KAAK,EAAIC,KAAK,CAACK,MAAN,CAAaC,MAA3C,CAEA,GAAM,CAAAC,WAAW,CACfrB,QAAQ,CAACsB,EAAT,GAAgB,KAAhB,CACIJ,YADJ,CAEIP,QAAQ,CACRG,KAAK,CAACS,IAAN,CACErB,QAAQ,CAACL,KAAD,CAAR,CAAgB2B,KAAhB,CAAsB,GAAtB,EAA2BC,GAA3B,GAAiCC,MAAjC,EADF,CAEExB,QAAQ,CAACJ,KAAD,CAAR,CAAgB0B,KAAhB,CAAsB,IAAtB,EAA4BC,GAA5B,GAAkCC,MAAlC,EAHM,CAIRxB,QAAQ,CAACgB,YAAD,CAAR,CAAuBM,KAAvB,CAA6B,GAA7B,EAAkCC,GAAlC,GAAwCC,MAAxC,EAPN,CASA,GAAM,CAAAC,cAAc,CAClB3B,QAAQ,CAACsB,EAAT,GAAgB,KAAhB,CACIf,SADJ,CAEII,QAAQ,CACRG,KAAK,CAACS,IAAN,CACE5B,OADF,CAEED,OAHM,CAIRgB,KAAK,CACLQ,YADK,CAELJ,KAAK,CAACS,IAAN,CACA7B,OADA,CAEAE,MAXN,CAaA,GAAM,CAAAgC,KAAK,CACTxB,OAAO,EAAIA,OAAO,CAACyB,KAAR,GAAkB,CAA7B,EAAkCzB,OAAO,CAAC0B,KAAR,EAAiB,EAAnD,CACI,CACET,WADF,CACEA,WADF,CAEEM,cAAA,CAAAA,cAFF,CADJ,CAKI3B,QAAQ,CAACsB,EAAT,GAAgB,KAAhB,CACA,CACES,gBAAgB,CAAEV,WADpB,CAEEW,UAAU,CAAEL,cAFd,CAGEM,gBAAgB,CAAEf,YAHpB,CADA,CAMA,CACEc,UAAU,CAAEL,cADd,CAEEO,UAAU,CAAE,CACVC,IAAI,CAAEd,WADI,CAEVe,KAAK,CAAE,EAFG,CAFd,CAZN,CAoBA,MACE,CAAA3C,KAAA,CAAA4C,aAAA,CAACpC,YAAD,CAAAqC,QAAA,EACE5B,KAAK,CAAEA,KADT,CAEEC,QAAQ,CAAEA,QAFZ,CAGEC,aAAa,CAAED,QAAQ,CAAGJ,SAAH,CAAeK,aAHxC,EAIMgB,KAJN,CAKMb,IALN,EADF,CASD,CA7DD,CA+DA,cAAe,CAAAZ,SAAS,CAACK,MAAD,CAAxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}