{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"route\",\"style\",\"children\",\"borderless\",\"centered\",\"rippleColor\"],_excluded2=[\"component\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import Animated from\"react-native-web/dist/exports/Animated\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import Keyboard from\"react-native-web/dist/exports/Keyboard\";import{getBottomSpace}from'react-native-iphone-x-helper';import color from'color';import overlay from\"../styles/overlay\";import Icon from\"./Icon\";import Surface from\"./Surface\";import Badge from\"./Badge\";import TouchableRipple from\"./TouchableRipple/TouchableRipple\";import Text from\"./Typography/Text\";import{black,white}from\"../styles/colors\";import{withTheme}from\"../core/theming\";import useAnimatedValue from\"../utils/useAnimatedValue\";import useAnimatedValueArray from\"../utils/useAnimatedValueArray\";import useLayout from\"../utils/useLayout\";var MIN_RIPPLE_SCALE=0.001;var MIN_TAB_WIDTH=96;var MAX_TAB_WIDTH=168;var BAR_HEIGHT=56;var BOTTOM_INSET=getBottomSpace();var FAR_FAR_AWAY=Platform.OS==='web'?0:9999;var Touchable=function Touchable(_ref){var _0=_ref.route,style=_ref.style,children=_ref.children,borderless=_ref.borderless,centered=_ref.centered,rippleColor=_ref.rippleColor,rest=_objectWithoutProperties(_ref,_excluded);return TouchableRipple.supported?React.createElement(TouchableRipple,_extends({},rest,{disabled:rest.disabled||undefined,borderless:borderless,centered:centered,rippleColor:rippleColor,style:style}),children):React.createElement(TouchableWithoutFeedback,rest,React.createElement(View,{style:style},children));};var SceneComponent=React.memo(function(_ref2){var component=_ref2.component,rest=_objectWithoutProperties(_ref2,_excluded2);return React.createElement(component,rest);});var BottomNavigation=function BottomNavigation(_ref3){var navigationState=_ref3.navigationState,renderScene=_ref3.renderScene,renderIcon=_ref3.renderIcon,renderLabel=_ref3.renderLabel,_ref3$renderTouchable=_ref3.renderTouchable,renderTouchable=_ref3$renderTouchable===void 0?function(props){return React.createElement(Touchable,props);}:_ref3$renderTouchable,_ref3$getLabelText=_ref3.getLabelText,getLabelText=_ref3$getLabelText===void 0?function(_ref4){var route=_ref4.route;return route.title;}:_ref3$getLabelText,_ref3$getBadge=_ref3.getBadge,getBadge=_ref3$getBadge===void 0?function(_ref5){var route=_ref5.route;return route.badge;}:_ref3$getBadge,_ref3$getColor=_ref3.getColor,getColor=_ref3$getColor===void 0?function(_ref6){var route=_ref6.route;return route.color;}:_ref3$getColor,_ref3$getAccessibilit=_ref3.getAccessibilityLabel,getAccessibilityLabel=_ref3$getAccessibilit===void 0?function(_ref7){var route=_ref7.route;return route.accessibilityLabel;}:_ref3$getAccessibilit,_ref3$getTestID=_ref3.getTestID,getTestID=_ref3$getTestID===void 0?function(_ref8){var route=_ref8.route;return route.testID;}:_ref3$getTestID,activeColor=_ref3.activeColor,inactiveColor=_ref3.inactiveColor,_ref3$keyboardHidesNa=_ref3.keyboardHidesNavigationBar,keyboardHidesNavigationBar=_ref3$keyboardHidesNa===void 0?true:_ref3$keyboardHidesNa,barStyle=_ref3.barStyle,_ref3$labeled=_ref3.labeled,labeled=_ref3$labeled===void 0?true:_ref3$labeled,style=_ref3.style,theme=_ref3.theme,_ref3$sceneAnimationE=_ref3.sceneAnimationEnabled,sceneAnimationEnabled=_ref3$sceneAnimationE===void 0?false:_ref3$sceneAnimationE,onTabPress=_ref3.onTabPress,onIndexChange=_ref3.onIndexChange,_ref3$shifting=_ref3.shifting,shifting=_ref3$shifting===void 0?navigationState.routes.length>3:_ref3$shifting,safeAreaInsets=_ref3.safeAreaInsets;var _safeAreaInsets$left,_safeAreaInsets$right,_safeAreaInsets$botto;var scale=theme.animation.scale;var focusedKey=navigationState.routes[navigationState.index].key;var visibleAnim=useAnimatedValue(1);var tabsAnims=useAnimatedValueArray(navigationState.routes.map(function(_,i){return i===navigationState.index?1:0;}));var offsetsAnims=useAnimatedValueArray(navigationState.routes.map(function(_,i){return i===navigationState.index?0:1;}));var indexAnim=useAnimatedValue(navigationState.index);var rippleAnim=useAnimatedValue(MIN_RIPPLE_SCALE);var _useLayout=useLayout(),_useLayout2=_slicedToArray(_useLayout,2),layout=_useLayout2[0],onLayout=_useLayout2[1];var _React$useState=React.useState([focusedKey]),_React$useState2=_slicedToArray(_React$useState,2),loaded=_React$useState2[0],setLoaded=_React$useState2[1];if(!loaded.includes(focusedKey)){setLoaded(function(loaded){return[].concat(_toConsumableArray(loaded),[focusedKey]);});}var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),keyboardVisible=_React$useState4[0],setKeyboardVisible=_React$useState4[1];var handleKeyboardShow=React.useCallback(function(){setKeyboardVisible(true);Animated.timing(visibleAnim,{toValue:0,duration:150*scale,useNativeDriver:true}).start();},[scale,visibleAnim]);var handleKeyboardHide=React.useCallback(function(){Animated.timing(visibleAnim,{toValue:1,duration:100*scale,useNativeDriver:true}).start(function(){setKeyboardVisible(false);});},[scale,visibleAnim]);var animateToIndex=React.useCallback(function(index){rippleAnim.setValue(MIN_RIPPLE_SCALE);Animated.parallel([Animated.timing(rippleAnim,{toValue:1,duration:shifting?400*scale:0,useNativeDriver:true})].concat(_toConsumableArray(navigationState.routes.map(function(_,i){return Animated.timing(tabsAnims[i],{toValue:i===index?1:0,duration:shifting?150*scale:0,useNativeDriver:true});})))).start(function(_ref9){var finished=_ref9.finished;tabsAnims.map(function(tab,i){return tab.setValue(i===index?1:0);});indexAnim.setValue(index);rippleAnim.setValue(MIN_RIPPLE_SCALE);if(finished){offsetsAnims.forEach(function(offset,i){if(i===index){offset.setValue(0);}else{offset.setValue(1);}});}});},[indexAnim,shifting,navigationState.routes,offsetsAnims,rippleAnim,scale,tabsAnims]);React.useEffect(function(){animateToIndex(navigationState.index);},[]);React.useEffect(function(){if(Platform.OS==='ios'){Keyboard.addListener('keyboardWillShow',handleKeyboardShow);Keyboard.addListener('keyboardWillHide',handleKeyboardHide);}else{Keyboard.addListener('keyboardDidShow',handleKeyboardShow);Keyboard.addListener('keyboardDidHide',handleKeyboardHide);}return function(){if(Platform.OS==='ios'){Keyboard.removeListener('keyboardWillShow',handleKeyboardShow);Keyboard.removeListener('keyboardWillHide',handleKeyboardHide);}else{Keyboard.removeListener('keyboardDidShow',handleKeyboardShow);Keyboard.removeListener('keyboardDidHide',handleKeyboardHide);}};},[handleKeyboardHide,handleKeyboardShow]);var prevNavigationState=React.useRef();React.useEffect(function(){offsetsAnims.forEach(function(offset,i){var _prevNavigationState$;if(i===navigationState.index||i===((_prevNavigationState$=prevNavigationState.current)===null||_prevNavigationState$===void 0?void 0:_prevNavigationState$.index)){offset.setValue(0);}});animateToIndex(navigationState.index);},[navigationState.index,animateToIndex,offsetsAnims]);var handleTabPress=function handleTabPress(index){var event={route:navigationState.routes[index],defaultPrevented:false,preventDefault:function preventDefault(){event.defaultPrevented=true;}};onTabPress===null||onTabPress===void 0?void 0:onTabPress(event);if(event.defaultPrevented){return;}if(index!==navigationState.index){onIndexChange(index);}};var jumpTo=React.useCallback(function(key){var index=navigationState.routes.findIndex(function(route){return route.key===key;});onIndexChange(index);},[navigationState.routes,onIndexChange]);var routes=navigationState.routes;var colors=theme.colors,isDarkTheme=theme.dark,mode=theme.mode;var _ref10=StyleSheet.flatten(barStyle)||{},customBackground=_ref10.backgroundColor,_ref10$elevation=_ref10.elevation,elevation=_ref10$elevation===void 0?4:_ref10$elevation;var approxBackgroundColor=customBackground?customBackground:isDarkTheme&&mode==='adaptive'?overlay(elevation,colors.surface):colors.primary;var backgroundColor=shifting?indexAnim.interpolate({inputRange:routes.map(function(_,i){return i;}),outputRange:routes.map(function(route){return getColor({route:route})||approxBackgroundColor;})}):approxBackgroundColor;var isDark=typeof approxBackgroundColor==='string'?!color(approxBackgroundColor).isLight():true;var textColor=isDark?white:black;var activeTintColor=typeof activeColor!=='undefined'?activeColor:textColor;var inactiveTintColor=typeof inactiveColor!=='undefined'?inactiveColor:color(textColor).alpha(0.5).rgb().string();var touchColor=color(activeColor||activeTintColor).alpha(0.12).rgb().string();var maxTabWidth=routes.length>3?MIN_TAB_WIDTH:MAX_TAB_WIDTH;var maxTabBarWidth=maxTabWidth*routes.length;var tabBarWidth=Math.min(layout.width,maxTabBarWidth);var tabWidth=tabBarWidth/routes.length;var rippleSize=layout.width/4;var insets={left:(_safeAreaInsets$left=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.left)!==null&&_safeAreaInsets$left!==void 0?_safeAreaInsets$left:0,right:(_safeAreaInsets$right=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.right)!==null&&_safeAreaInsets$right!==void 0?_safeAreaInsets$right:0,bottom:(_safeAreaInsets$botto=safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.bottom)!==null&&_safeAreaInsets$botto!==void 0?_safeAreaInsets$botto:BOTTOM_INSET};return React.createElement(View,{style:[styles.container,style]},React.createElement(View,{style:[styles.content,{backgroundColor:colors.background}]},routes.map(function(route,index){if(!loaded.includes(route.key)){return null;}var focused=navigationState.index===index;var opacity=sceneAnimationEnabled?tabsAnims[index]:focused?1:0;var top=sceneAnimationEnabled?offsetsAnims[index].interpolate({inputRange:[0,1],outputRange:[0,FAR_FAR_AWAY]}):focused?0:FAR_FAR_AWAY;return React.createElement(Animated.View,{key:route.key,pointerEvents:focused?'auto':'none',accessibilityElementsHidden:!focused,importantForAccessibility:focused?'auto':'no-hide-descendants',style:[StyleSheet.absoluteFill,{opacity:opacity}],collapsable:false,removeClippedSubviews:Platform.OS==='ios'?navigationState.index!==index:true},React.createElement(Animated.View,{style:[styles.content,{top:top}]},renderScene({route:route,jumpTo:jumpTo})));})),React.createElement(Surface,{style:[styles.bar,keyboardHidesNavigationBar?{transform:[{translateY:visibleAnim.interpolate({inputRange:[0,1],outputRange:[layout.height,0]})}],position:keyboardVisible?'absolute':null}:null,barStyle],pointerEvents:layout.measured?keyboardHidesNavigationBar&&keyboardVisible?'none':'auto':'none',onLayout:onLayout},React.createElement(Animated.View,{style:[styles.barContent,{backgroundColor:backgroundColor}]},React.createElement(View,{style:[styles.items,{marginBottom:insets.bottom,marginHorizontal:Math.max(insets.left,insets.right),maxWidth:maxTabBarWidth}],accessibilityRole:'tablist'},shifting?React.createElement(Animated.View,{pointerEvents:\"none\",style:[styles.ripple,{top:(BAR_HEIGHT-rippleSize)/2,left:tabWidth*(navigationState.index+0.5)-rippleSize/2,height:rippleSize,width:rippleSize,borderRadius:rippleSize/2,backgroundColor:getColor({route:routes[navigationState.index]}),transform:[{scale:rippleAnim.interpolate({inputRange:[0,1],outputRange:[0,8]})}],opacity:rippleAnim.interpolate({inputRange:[0,MIN_RIPPLE_SCALE,0.3,1],outputRange:[0,0,1,1]})}]}):null,routes.map(function(route,index){var focused=navigationState.index===index;var active=tabsAnims[index];var scale=labeled&&shifting?active.interpolate({inputRange:[0,1],outputRange:[0.5,1]}):1;var translateY=labeled?shifting?active.interpolate({inputRange:[0,1],outputRange:[7,0]}):0:7;var activeOpacity=active;var inactiveOpacity=active.interpolate({inputRange:[0,1],outputRange:[1,0]});var badge=getBadge({route:route});return renderTouchable({key:route.key,route:route,borderless:true,centered:true,rippleColor:touchColor,onPress:function onPress(){return handleTabPress(index);},testID:getTestID({route:route}),accessibilityLabel:getAccessibilityLabel({route:route}),accessibilityTraits:focused?['button','selected']:'button',accessibilityComponentType:'button',accessibilityRole:Platform.OS==='ios'?'button':'tab',accessibilityState:{selected:focused},style:styles.item,children:React.createElement(View,{pointerEvents:\"none\"},React.createElement(Animated.View,{style:[styles.iconContainer,{transform:[{translateY:translateY}]}]},React.createElement(Animated.View,{style:[styles.iconWrapper,{opacity:activeOpacity}]},renderIcon?renderIcon({route:route,focused:true,color:activeTintColor}):React.createElement(Icon,{source:route.icon,color:activeTintColor,size:24})),React.createElement(Animated.View,{style:[styles.iconWrapper,{opacity:inactiveOpacity}]},renderIcon?renderIcon({route:route,focused:false,color:inactiveTintColor}):React.createElement(Icon,{source:route.icon,color:inactiveTintColor,size:24})),React.createElement(View,{style:[styles.badgeContainer,{right:(badge!=null&&typeof badge!=='boolean'?String(badge).length*-2:0)-2}]},typeof badge==='boolean'?React.createElement(Badge,{visible:badge,size:8}):React.createElement(Badge,{visible:badge!=null,size:16},badge))),labeled?React.createElement(Animated.View,{style:[styles.labelContainer,{transform:[{scale:scale}]}]},React.createElement(Animated.View,{style:[styles.labelWrapper,{opacity:activeOpacity}]},renderLabel?renderLabel({route:route,focused:true,color:activeTintColor}):React.createElement(Text,{style:[styles.label,{color:activeTintColor}]},getLabelText({route:route}))),shifting?null:React.createElement(Animated.View,{style:[styles.labelWrapper,{opacity:inactiveOpacity}]},renderLabel?renderLabel({route:route,focused:false,color:inactiveTintColor}):React.createElement(Text,{selectable:false,style:[styles.label,{color:inactiveTintColor}]},getLabelText({route:route})))):React.createElement(View,{style:styles.labelContainer}))});})))));};BottomNavigation.SceneMap=function(scenes){return function(_ref11){var route=_ref11.route,jumpTo=_ref11.jumpTo;return React.createElement(SceneComponent,{key:route.key,component:scenes[route.key?route.key:''],route:route,jumpTo:jumpTo});};};export default withTheme(BottomNavigation);var styles=StyleSheet.create({container:{flex:1,overflow:'hidden'},content:{flex:1},bar:{left:0,right:0,bottom:0,elevation:4},barContent:{alignItems:'center',overflow:'hidden'},items:_objectSpread({flexDirection:'row'},Platform.OS==='web'?{width:'100%'}:null),item:{flex:1,paddingVertical:6},ripple:{position:'absolute'},iconContainer:{height:24,width:24,marginTop:2,marginHorizontal:12,alignSelf:'center'},iconWrapper:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{alignItems:'center'}),labelContainer:{height:16,paddingBottom:2},labelWrapper:_objectSpread({},StyleSheet.absoluteFillObject),label:_objectSpread({fontSize:12,textAlign:'center',backgroundColor:'transparent'},Platform.OS==='web'?{whiteSpace:'nowrap',alignSelf:'center'}:null),badgeContainer:{position:'absolute',left:0,top:-2}});","map":{"version":3,"names":["React","View","Animated","TouchableWithoutFeedback","StyleSheet","Platform","Keyboard","getBottomSpace","color","overlay","Icon","Surface","Badge","TouchableRipple","Text","black","white","withTheme","useAnimatedValue","useAnimatedValueArray","useLayout","MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","BOTTOM_INSET","FAR_FAR_AWAY","OS","Touchable","_ref","_0","route","style","children","borderless","centered","rippleColor","rest","_objectWithoutProperties","_excluded","supported","createElement","_extends","disabled","undefined","SceneComponent","memo","_ref2","component","_excluded2","BottomNavigation","_ref3","navigationState","renderScene","renderIcon","renderLabel","_ref3$renderTouchable","renderTouchable","props","_ref3$getLabelText","getLabelText","_ref4","title","_ref3$getBadge","getBadge","_ref5","badge","_ref3$getColor","getColor","_ref6","_ref3$getAccessibilit","getAccessibilityLabel","_ref7","accessibilityLabel","_ref3$getTestID","getTestID","_ref8","testID","activeColor","inactiveColor","_ref3$keyboardHidesNa","keyboardHidesNavigationBar","barStyle","_ref3$labeled","labeled","theme","_ref3$sceneAnimationE","sceneAnimationEnabled","onTabPress","onIndexChange","_ref3$shifting","shifting","routes","length","safeAreaInsets","_safeAreaInsets$left","_safeAreaInsets$right","_safeAreaInsets$botto","scale","animation","focusedKey","index","key","visibleAnim","tabsAnims","map","_","i","offsetsAnims","indexAnim","rippleAnim","_useLayout","_useLayout2","_slicedToArray","layout","onLayout","_React$useState","useState","_React$useState2","loaded","setLoaded","includes","concat","_toConsumableArray","_React$useState3","_React$useState4","keyboardVisible","setKeyboardVisible","handleKeyboardShow","useCallback","timing","toValue","duration","useNativeDriver","start","handleKeyboardHide","animateToIndex","setValue","parallel","_ref9","finished","tab","forEach","offset","useEffect","addListener","removeListener","prevNavigationState","useRef","_prevNavigationState$","current","handleTabPress","event","defaultPrevented","preventDefault","jumpTo","findIndex","colors","isDarkTheme","dark","mode","_ref10","flatten","customBackground","backgroundColor","_ref10$elevation","elevation","approxBackgroundColor","surface","primary","interpolate","inputRange","outputRange","isDark","isLight","textColor","activeTintColor","inactiveTintColor","alpha","rgb","string","touchColor","maxTabWidth","maxTabBarWidth","tabBarWidth","Math","min","width","tabWidth","rippleSize","insets","left","right","bottom","styles","container","content","background","focused","opacity","top","pointerEvents","accessibilityElementsHidden","importantForAccessibility","absoluteFill","collapsable","removeClippedSubviews","bar","transform","translateY","height","position","measured","barContent","items","marginBottom","marginHorizontal","max","maxWidth","accessibilityRole","ripple","borderRadius","active","activeOpacity","inactiveOpacity","onPress","accessibilityTraits","accessibilityComponentType","accessibilityState","selected","item","iconContainer","iconWrapper","source","icon","size","badgeContainer","String","visible","labelContainer","labelWrapper","label","selectable","SceneMap","scenes","_ref11","create","flex","overflow","alignItems","_objectSpread","flexDirection","paddingVertical","marginTop","alignSelf","absoluteFillObject","paddingBottom","fontSize","textAlign","whiteSpace"],"sources":["/Users/ahadanwar/Desktop/tmdb/node_modules/react-native-paper/lib/module/components/BottomNavigation.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TouchableWithoutFeedback,\n  TouchableWithoutFeedbackProps,\n  StyleSheet,\n  StyleProp,\n  Platform,\n  Keyboard,\n  ViewStyle,\n} from 'react-native';\nimport { getBottomSpace } from 'react-native-iphone-x-helper';\nimport color from 'color';\nimport overlay from '../styles/overlay';\nimport Icon, { IconSource } from './Icon';\nimport Surface from './Surface';\nimport Badge from './Badge';\nimport TouchableRipple from './TouchableRipple/TouchableRipple';\nimport Text from './Typography/Text';\nimport { black, white } from '../styles/colors';\nimport { withTheme } from '../core/theming';\nimport useAnimatedValue from '../utils/useAnimatedValue';\nimport useAnimatedValueArray from '../utils/useAnimatedValueArray';\nimport useLayout from '../utils/useLayout';\n\ntype Route = {\n  key: string;\n  title?: string;\n  icon?: IconSource;\n  badge?: string | number | boolean;\n  color?: string;\n  accessibilityLabel?: string;\n  testID?: string;\n};\n\ntype NavigationState = {\n  index: number;\n  routes: Route[];\n};\n\ntype TabPressEvent = {\n  defaultPrevented: boolean;\n  preventDefault(): void;\n};\n\ntype TouchableProps = TouchableWithoutFeedbackProps & {\n  key: string;\n  route: Route;\n  children: React.ReactNode;\n  borderless?: boolean;\n  centered?: boolean;\n  rippleColor?: string;\n};\n\ntype Props = {\n  /**\n   * Whether the shifting style is used, the active tab icon shifts up to show the label and the inactive tabs won't have a label.\n   *\n   * By default, this is `true` when you have more than 3 tabs.\n   * Pass `shifting={false}` to explicitly disable this animation, or `shifting={true}` to always use this animation.\n   */\n  shifting?: boolean;\n  /**\n   * Whether to show labels in tabs. When `false`, only icons will be displayed.\n   */\n  labeled?: boolean;\n  /**\n   * State for the bottom navigation. The state should contain the following properties:\n   *\n   * - `index`: a number representing the index of the active route in the `routes` array\n   * - `routes`: an array containing a list of route objects used for rendering the tabs\n   *\n   * Each route object should contain the following properties:\n   *\n   * - `key`: a unique key to identify the route (required)\n   * - `title`: title of the route to use as the tab label\n   * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n   * - `color`: color to use as background color for shifting bottom navigation\n   * - `badge`: badge to show on the tab icon, can be `true` to show a dot, `string` or `number` to show text.\n   * - `accessibilityLabel`: accessibility label for the tab button\n   * - `testID`: test id for the tab button\n   *\n   * Example:\n   *\n   * ```js\n   * {\n   *   index: 1,\n   *   routes: [\n   *     { key: 'music', title: 'Music', icon: 'queue-music', color: '#3F51B5' },\n   *     { key: 'albums', title: 'Albums', icon: 'album', color: '#009688' },\n   *     { key: 'recents', title: 'Recents', icon: 'history', color: '#795548' },\n   *     { key: 'purchased', title: 'Purchased', icon: 'shopping-cart', color: '#607D8B' },\n   *   ]\n   * }\n   * ```\n   *\n   * `BottomNavigation` is a controlled component, which means the `index` needs to be updated via the `onIndexChange` callback.\n   */\n  navigationState: NavigationState;\n  /**\n   * Callback which is called on tab change, receives the index of the new tab as argument.\n   * The navigation state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onIndexChange: (index: number) => void;\n  /**\n   * Callback which returns a react element to render as the page for the tab. Receives an object containing the route as the argument:\n   *\n   * ```js\n   * renderScene = ({ route, jumpTo }) => {\n   *   switch (route.key) {\n   *     case 'music':\n   *       return <MusicRoute jumpTo={jumpTo} />;\n   *     case 'albums':\n   *       return <AlbumsRoute jumpTo={jumpTo} />;\n   *   }\n   * }\n   * ```\n   *\n   * Pages are lazily rendered, which means that a page will be rendered the first time you navigate to it.\n   * After initial render, all the pages stay rendered to preserve their state.\n   *\n   * You need to make sure that your individual routes implement a `shouldComponentUpdate` to improve the performance.\n   * To make it easier to specify the components, you can use the `SceneMap` helper:\n   *\n   * ```js\n   * renderScene = BottomNavigation.SceneMap({\n   *   music: MusicRoute,\n   *   albums: AlbumsRoute,\n   * });\n   * ```\n   *\n   * Specifying the components this way is easier and takes care of implementing a `shouldComponentUpdate` method.\n   * Each component will receive the current route and a `jumpTo` method as it's props.\n   * The `jumpTo` method can be used to navigate to other tabs programmatically:\n   *\n   * ```js\n   * this.props.jumpTo('albums')\n   * ```\n   */\n  renderScene: (props: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => React.ReactNode | null;\n  /**\n   * Callback which returns a React Element to be used as tab icon.\n   */\n  renderIcon?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which React Element to be used as tab label.\n   */\n  renderLabel?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to be used as the touchable for the tab item.\n   * Renders a `TouchableRipple` on Android and `TouchableWithoutFeedback` with `View` on iOS.\n   */\n  renderTouchable?: (props: TouchableProps) => React.ReactNode;\n  /**\n   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n   */\n  getLabelText?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get accessibility label for the tab button. This is read by the screen reader when the user taps the tab.\n   * Uses `route.accessibilityLabel` by default.\n   */\n  getAccessibilityLabel?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get the id to locate this tab button in tests, uses `route.testID` by default.\n   */\n  getTestID?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get badge for the tab, uses `route.badge` by default.\n   */\n  getBadge?: (props: { route: Route }) => boolean | number | string | undefined;\n  /**\n   * Get color for the tab, uses `route.color` by default.\n   */\n  getColor?: (props: { route: Route }) => string | undefined;\n  /**\n   * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n   */\n  onTabPress?: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Custom color for icon and label in the active tab.\n   */\n  activeColor?: string;\n  /**\n   * Custom color for icon and label in the inactive tab.\n   */\n  inactiveColor?: string;\n  /**\n   * Whether animation is enabled for scenes transitions in `shifting` mode.\n   * By default, the scenes cross-fade during tab change when `shifting` is enabled.\n   * Specify `sceneAnimationEnabled` as `false` to disable the animation.\n   */\n  sceneAnimationEnabled?: boolean;\n  /**\n   * Whether the bottom navigation bar is hidden when keyboard is shown.\n   * On Android, this works best when [`windowSoftInputMode`](https://developer.android.com/guide/topics/manifest/activity-element#wsoft) is set to `adjustResize`.\n   */\n  keyboardHidesNavigationBar?: boolean;\n  /**\n   * Safe area insets for the tab bar. This can be used to avoid elements like the navigation bar on Android and bottom safe area on iOS.\n   * The bottom insets for iOS is added by default. You can override the behavior with this option.\n   */\n  safeAreaInsets?: {\n    top?: number;\n    right?: number;\n    bottom?: number;\n    left?: number;\n  };\n  /**\n   * Style for the bottom navigation bar.  You can pass a custom background color here:\n   *\n   * ```js\n   * barStyle={{ backgroundColor: '#694fad' }}\n   * ```\n   */\n  barStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst BOTTOM_INSET = getBottomSpace();\nconst FAR_FAR_AWAY = Platform.OS === 'web' ? 0 : 9999;\n\nconst Touchable = ({\n  route: _0,\n  style,\n  children,\n  borderless,\n  centered,\n  rippleColor,\n  ...rest\n}: TouchableProps) =>\n  TouchableRipple.supported ? (\n    <TouchableRipple\n      {...rest}\n      disabled={rest.disabled || undefined}\n      borderless={borderless}\n      centered={centered}\n      rippleColor={rippleColor}\n      style={style}\n    >\n      {children}\n    </TouchableRipple>\n  ) : (\n    <TouchableWithoutFeedback {...rest}>\n      <View style={style}>{children}</View>\n    </TouchableWithoutFeedback>\n  );\n\nconst SceneComponent = React.memo(({ component, ...rest }: any) =>\n  React.createElement(component, rest)\n);\n\n/**\n * Bottom navigation provides quick navigation between top-level views of an app with a bottom navigation bar.\n * It is primarily designed for use on mobile.\n *\n * For integration with React Navigation, you can use [react-navigation-material-bottom-tabs](https://github.com/react-navigation/react-navigation/tree/main/packages/material-bottom-tabs) and consult [createMaterialBottomTabNavigator](https://reactnavigation.org/docs/material-bottom-tab-navigator/) documentation.\n *\n * By default Bottom navigation uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/bottom-navigation.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { BottomNavigation, Text } from 'react-native-paper';\n *\n * const MusicRoute = () => <Text>Music</Text>;\n *\n * const AlbumsRoute = () => <Text>Albums</Text>;\n *\n * const RecentsRoute = () => <Text>Recents</Text>;\n *\n * const MyComponent = () => {\n *   const [index, setIndex] = React.useState(0);\n *   const [routes] = React.useState([\n *     { key: 'music', title: 'Music', icon: 'queue-music' },\n *     { key: 'albums', title: 'Albums', icon: 'album' },\n *     { key: 'recents', title: 'Recents', icon: 'history' },\n *   ]);\n *\n *   const renderScene = BottomNavigation.SceneMap({\n *     music: MusicRoute,\n *     albums: AlbumsRoute,\n *     recents: RecentsRoute,\n *   });\n *\n *   return (\n *     <BottomNavigation\n *       navigationState={{ index, routes }}\n *       onIndexChange={setIndex}\n *       renderScene={renderScene}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst BottomNavigation = ({\n  navigationState,\n  renderScene,\n  renderIcon,\n  renderLabel,\n  renderTouchable = (props: TouchableProps) => <Touchable {...props} />,\n  getLabelText = ({ route }: { route: Route }) => route.title,\n  getBadge = ({ route }: { route: Route }) => route.badge,\n  getColor = ({ route }: { route: Route }) => route.color,\n  getAccessibilityLabel = ({ route }: { route: Route }) =>\n    route.accessibilityLabel,\n  getTestID = ({ route }: { route: Route }) => route.testID,\n  activeColor,\n  inactiveColor,\n  keyboardHidesNavigationBar = true,\n  barStyle,\n  labeled = true,\n  style,\n  theme,\n  sceneAnimationEnabled = false,\n  onTabPress,\n  onIndexChange,\n  shifting = navigationState.routes.length > 3,\n  safeAreaInsets,\n}: Props) => {\n  const { scale } = theme.animation;\n\n  const focusedKey = navigationState.routes[navigationState.index].key;\n\n  /**\n   * Visibility of the navigation bar, visible state is 1 and invisible is 0.\n   */\n  const visibleAnim = useAnimatedValue(1);\n\n  /**\n   * Active state of individual tab items, active state is 1 and inactive state is 0.\n   */\n  const tabsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // focused === 1, unfocused === 0\n      (_, i) => (i === navigationState.index ? 1 : 0)\n    )\n  );\n\n  /**\n   * The top offset for each tab item to position it offscreen.\n   * Placing items offscreen helps to save memory usage for inactive screens with removeClippedSubviews.\n   * We use animated values for this to prevent unnecessary re-renders.\n   */\n  const offsetsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // offscreen === 1, normal === 0\n      (_, i) => (i === navigationState.index ? 0 : 1)\n    )\n  );\n\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * We don't use the color as an animated value directly, because `setValue` seems to be buggy with colors.\n   */\n  const indexAnim = useAnimatedValue(navigationState.index);\n\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n  const rippleAnim = useAnimatedValue(MIN_RIPPLE_SCALE);\n\n  /**\n   * Layout of the navigation bar. The width is used to determine the size and position of the ripple.\n   */\n  const [layout, onLayout] = useLayout();\n\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  const [loaded, setLoaded] = React.useState<string[]>([focusedKey]);\n\n  if (!loaded.includes(focusedKey)) {\n    // Set the current tab to be loaded if it was not loaded before\n    setLoaded((loaded) => [...loaded, focusedKey]);\n  }\n\n  /**\n   * Track whether the keyboard is visible to show and hide the navigation bar.\n   */\n  const [keyboardVisible, setKeyboardVisible] = React.useState(false);\n\n  const handleKeyboardShow = React.useCallback(() => {\n    setKeyboardVisible(true);\n    Animated.timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [scale, visibleAnim]);\n\n  const handleKeyboardHide = React.useCallback(() => {\n    Animated.timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true,\n    }).start(() => {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n\n  const animateToIndex = React.useCallback(\n    (index: number) => {\n      // Reset the ripple to avoid glitch if it's currently animating\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n      Animated.parallel([\n        Animated.timing(rippleAnim, {\n          toValue: 1,\n          duration: shifting ? 400 * scale : 0,\n          useNativeDriver: true,\n        }),\n        ...navigationState.routes.map((_, i) =>\n          Animated.timing(tabsAnims[i], {\n            toValue: i === index ? 1 : 0,\n            duration: shifting ? 150 * scale : 0,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start(({ finished }) => {\n        // Workaround a bug in native animations where this is reset after first animation\n        tabsAnims.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n\n        // Update the index to change bar's background color and then hide the ripple\n        indexAnim.setValue(index);\n        rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n        if (finished) {\n          // Position all inactive screens offscreen to save memory usage\n          // Only do it when animation has finished to avoid glitches mid-transition if switching fast\n          offsetsAnims.forEach((offset, i) => {\n            if (i === index) {\n              offset.setValue(0);\n            } else {\n              offset.setValue(1);\n            }\n          });\n        }\n      });\n    },\n    [\n      indexAnim,\n      shifting,\n      navigationState.routes,\n      offsetsAnims,\n      rippleAnim,\n      scale,\n      tabsAnims,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    animateToIndex(navigationState.index);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, [handleKeyboardHide, handleKeyboardShow]);\n\n  const prevNavigationState = React.useRef<NavigationState>();\n\n  React.useEffect(() => {\n    // Reset offsets of previous and current tabs before animation\n    offsetsAnims.forEach((offset, i) => {\n      if (\n        i === navigationState.index ||\n        i === prevNavigationState.current?.index\n      ) {\n        offset.setValue(0);\n      }\n    });\n\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex, offsetsAnims]);\n\n  const handleTabPress = (index: number) => {\n    const event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: () => {\n        event.defaultPrevented = true;\n      },\n    };\n\n    onTabPress?.(event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (index !== navigationState.index) {\n      onIndexChange(index);\n    }\n  };\n\n  const jumpTo = React.useCallback(\n    (key: string) => {\n      const index = navigationState.routes.findIndex(\n        (route) => route.key === key\n      );\n\n      onIndexChange(index);\n    },\n    [navigationState.routes, onIndexChange]\n  );\n\n  const { routes } = navigationState;\n  const { colors, dark: isDarkTheme, mode } = theme;\n\n  const { backgroundColor: customBackground, elevation = 4 }: ViewStyle =\n    StyleSheet.flatten(barStyle) || {};\n\n  const approxBackgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n\n  const backgroundColor = shifting\n    ? indexAnim.interpolate({\n        inputRange: routes.map((_, i) => i),\n        // FIXME: does outputRange support ColorValue or just strings?\n        // @ts-expect-error\n        outputRange: routes.map(\n          (route) => getColor({ route }) || approxBackgroundColor\n        ),\n      })\n    : approxBackgroundColor;\n\n  const isDark =\n    typeof approxBackgroundColor === 'string'\n      ? !color(approxBackgroundColor).isLight()\n      : true;\n\n  const textColor = isDark ? white : black;\n  const activeTintColor =\n    typeof activeColor !== 'undefined' ? activeColor : textColor;\n  const inactiveTintColor =\n    typeof inactiveColor !== 'undefined'\n      ? inactiveColor\n      : color(textColor).alpha(0.5).rgb().string();\n\n  const touchColor = color(activeColor || activeTintColor)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  const maxTabBarWidth = maxTabWidth * routes.length;\n\n  const tabBarWidth = Math.min(layout.width, maxTabBarWidth);\n  const tabWidth = tabBarWidth / routes.length;\n\n  const rippleSize = layout.width / 4;\n\n  const insets = {\n    left: safeAreaInsets?.left ?? 0,\n    right: safeAreaInsets?.right ?? 0,\n    bottom: safeAreaInsets?.bottom ?? BOTTOM_INSET,\n  };\n\n  return (\n    <View style={[styles.container, style]}>\n      <View style={[styles.content, { backgroundColor: colors.background }]}>\n        {routes.map((route, index) => {\n          if (!loaded.includes(route.key)) {\n            // Don't render a screen if we've never navigated to it\n            return null;\n          }\n\n          const focused = navigationState.index === index;\n\n          const opacity = sceneAnimationEnabled\n            ? tabsAnims[index]\n            : focused\n            ? 1\n            : 0;\n\n          const top = sceneAnimationEnabled\n            ? offsetsAnims[index].interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, FAR_FAR_AWAY],\n              })\n            : focused\n            ? 0\n            : FAR_FAR_AWAY;\n\n          return (\n            <Animated.View\n              key={route.key}\n              pointerEvents={focused ? 'auto' : 'none'}\n              accessibilityElementsHidden={!focused}\n              importantForAccessibility={\n                focused ? 'auto' : 'no-hide-descendants'\n              }\n              style={[StyleSheet.absoluteFill, { opacity }]}\n              collapsable={false}\n              removeClippedSubviews={\n                // On iOS, set removeClippedSubviews to true only when not focused\n                // This is an workaround for a bug where the clipped view never re-appears\n                Platform.OS === 'ios' ? navigationState.index !== index : true\n              }\n            >\n              <Animated.View style={[styles.content, { top }]}>\n                {renderScene({ route, jumpTo })}\n              </Animated.View>\n            </Animated.View>\n          );\n        })}\n      </View>\n      <Surface\n        style={\n          [\n            styles.bar,\n            keyboardHidesNavigationBar\n              ? {\n                  // When the keyboard is shown, slide down the navigation bar\n                  transform: [\n                    {\n                      translateY: visibleAnim.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [layout.height, 0],\n                      }),\n                    },\n                  ],\n                  // Absolutely position the navigation bar so that the content is below it\n                  // This is needed to avoid gap at bottom when the navigation bar is hidden\n                  position: keyboardVisible ? 'absolute' : null,\n                }\n              : null,\n            barStyle,\n          ] as StyleProp<ViewStyle>\n        }\n        pointerEvents={\n          layout.measured\n            ? keyboardHidesNavigationBar && keyboardVisible\n              ? 'none'\n              : 'auto'\n            : 'none'\n        }\n        onLayout={onLayout}\n      >\n        <Animated.View style={[styles.barContent, { backgroundColor }]}>\n          <View\n            style={[\n              styles.items,\n              {\n                marginBottom: insets.bottom,\n                marginHorizontal: Math.max(insets.left, insets.right),\n                maxWidth: maxTabBarWidth,\n              },\n            ]}\n            accessibilityRole={'tablist'}\n          >\n            {shifting ? (\n              <Animated.View\n                pointerEvents=\"none\"\n                style={[\n                  styles.ripple,\n                  {\n                    // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n                    // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n                    top: (BAR_HEIGHT - rippleSize) / 2,\n                    left:\n                      tabWidth * (navigationState.index + 0.5) - rippleSize / 2,\n                    height: rippleSize,\n                    width: rippleSize,\n                    borderRadius: rippleSize / 2,\n                    backgroundColor: getColor({\n                      route: routes[navigationState.index],\n                    }),\n                    transform: [\n                      {\n                        // Scale to twice the size  to ensure it covers the whole navigation bar\n                        scale: rippleAnim.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [0, 8],\n                        }),\n                      },\n                    ],\n                    opacity: rippleAnim.interpolate({\n                      inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n                      outputRange: [0, 0, 1, 1],\n                    }),\n                  },\n                ]}\n              />\n            ) : null}\n            {routes.map((route, index) => {\n              const focused = navigationState.index === index;\n              const active = tabsAnims[index];\n\n              // Scale the label up\n              const scale =\n                labeled && shifting\n                  ? active.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [0.5, 1],\n                    })\n                  : 1;\n\n              // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n              const translateY = labeled\n                ? shifting\n                  ? active.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [7, 0],\n                    })\n                  : 0\n                : 7;\n\n              // We render the active icon and label on top of inactive ones and cross-fade them on change.\n              // This trick gives the illusion that we are animating between active and inactive colors.\n              // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n              const activeOpacity = active;\n              const inactiveOpacity = active.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              });\n\n              const badge = getBadge({ route });\n\n              return renderTouchable({\n                key: route.key,\n                route,\n                borderless: true,\n                centered: true,\n                rippleColor: touchColor,\n                onPress: () => handleTabPress(index),\n                testID: getTestID({ route }),\n                accessibilityLabel: getAccessibilityLabel({ route }),\n                // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n                accessibilityTraits: focused\n                  ? ['button', 'selected']\n                  : 'button',\n                accessibilityComponentType: 'button',\n                accessibilityRole: Platform.OS === 'ios' ? 'button' : 'tab',\n                accessibilityState: { selected: focused },\n                style: styles.item,\n                children: (\n                  <View pointerEvents=\"none\">\n                    <Animated.View\n                      style={[\n                        styles.iconContainer,\n                        { transform: [{ translateY }] },\n                      ]}\n                    >\n                      <Animated.View\n                        style={[styles.iconWrapper, { opacity: activeOpacity }]}\n                      >\n                        {renderIcon ? (\n                          renderIcon({\n                            route,\n                            focused: true,\n                            color: activeTintColor,\n                          })\n                        ) : (\n                          <Icon\n                            source={route.icon as IconSource}\n                            color={activeTintColor}\n                            size={24}\n                          />\n                        )}\n                      </Animated.View>\n                      <Animated.View\n                        style={[\n                          styles.iconWrapper,\n                          { opacity: inactiveOpacity },\n                        ]}\n                      >\n                        {renderIcon ? (\n                          renderIcon({\n                            route,\n                            focused: false,\n                            color: inactiveTintColor,\n                          })\n                        ) : (\n                          <Icon\n                            source={route.icon as IconSource}\n                            color={inactiveTintColor}\n                            size={24}\n                          />\n                        )}\n                      </Animated.View>\n                      <View\n                        style={[\n                          styles.badgeContainer,\n                          {\n                            right:\n                              (badge != null && typeof badge !== 'boolean'\n                                ? String(badge).length * -2\n                                : 0) - 2,\n                          },\n                        ]}\n                      >\n                        {typeof badge === 'boolean' ? (\n                          <Badge visible={badge} size={8} />\n                        ) : (\n                          <Badge visible={badge != null} size={16}>\n                            {badge}\n                          </Badge>\n                        )}\n                      </View>\n                    </Animated.View>\n                    {labeled ? (\n                      <Animated.View\n                        style={[\n                          styles.labelContainer,\n                          { transform: [{ scale }] },\n                        ]}\n                      >\n                        <Animated.View\n                          style={[\n                            styles.labelWrapper,\n                            { opacity: activeOpacity },\n                          ]}\n                        >\n                          {renderLabel ? (\n                            renderLabel({\n                              route,\n                              focused: true,\n                              color: activeTintColor,\n                            })\n                          ) : (\n                            <Text\n                              style={[styles.label, { color: activeTintColor }]}\n                            >\n                              {getLabelText({ route })}\n                            </Text>\n                          )}\n                        </Animated.View>\n                        {shifting ? null : (\n                          <Animated.View\n                            style={[\n                              styles.labelWrapper,\n                              { opacity: inactiveOpacity },\n                            ]}\n                          >\n                            {renderLabel ? (\n                              renderLabel({\n                                route,\n                                focused: false,\n                                color: inactiveTintColor,\n                              })\n                            ) : (\n                              <Text\n                                selectable={false}\n                                style={[\n                                  styles.label,\n                                  { color: inactiveTintColor },\n                                ]}\n                              >\n                                {getLabelText({ route })}\n                              </Text>\n                            )}\n                          </Animated.View>\n                        )}\n                      </Animated.View>\n                    ) : (\n                      <View style={styles.labelContainer} />\n                    )}\n                  </View>\n                ),\n              });\n            })}\n          </View>\n        </Animated.View>\n      </Surface>\n    </View>\n  );\n};\n\n/**\n * Function which takes a map of route keys to components.\n * Pure components are used to minimize re-rendering of the pages.\n * This drastically improves the animation performance.\n */\nBottomNavigation.SceneMap = (scenes: {\n  [key: string]: React.ComponentType<{\n    route: Route;\n    jumpTo: (key: string) => void;\n  }>;\n}) => {\n  return ({\n    route,\n    jumpTo,\n  }: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => (\n    <SceneComponent\n      key={route.key}\n      component={scenes[route.key ? route.key : '']}\n      route={route}\n      jumpTo={jumpTo}\n    />\n  );\n};\n\nexport default withTheme(BottomNavigation);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 4,\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  items: {\n    flexDirection: 'row',\n    ...(Platform.OS === 'web'\n      ? {\n          width: '100%',\n        }\n      : null),\n  },\n  item: {\n    flex: 1,\n    // Top padding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6,\n  },\n  ripple: {\n    position: 'absolute',\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center',\n  },\n  iconWrapper: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2,\n  },\n  labelWrapper: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  label: {\n    fontSize: 12,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...(Platform.OS === 'web'\n      ? {\n          whiteSpace: 'nowrap',\n          alignSelf: 'center',\n        }\n      : null),\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n    top: -2,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}